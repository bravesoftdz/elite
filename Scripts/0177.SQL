/*
** DEFINICAO DE VENDA/ESTOQUE/ICMS/IPI POR NATUREZA DE OPERACAO - PARTE II
** INCLUI CORRECAO NA ORDENACAO DAS VENDAS DOS ITENS EM ESTOQUE (POR ORDEM DE COMPRA)
*/

SET TERM ^ ;

ALTER PROCEDURE INFOVENDA (
    BARRA CHAR(14),
    CODEMPRESA INTEGER,
    CODMOVIMENTO INTEGER)
RETURNS (
    CODIGO INTEGER,
    QUANTIDADE INTEGER,
    DESCRICAO VARCHAR(100),
    ICMS NUMERIC(9,2),
    VALOR NUMERIC(9,2),
    CODSERVICO INTEGER)
AS
DECLARE VARIABLE CODPRODUTO INTEGER;
DECLARE VARIABLE UNICO INTEGER;
DECLARE VARIABLE NUMSERIE CHAR(20);
DECLARE VARIABLE PS CHAR(1);
DECLARE VARIABLE ICMSSIMPLES CHAR(1);
DECLARE VARIABLE ALIQUOTA_ICMSSIMPLES NUMERIC(9,4);
DECLARE VARIABLE XESTOQUE CHAR(1);
DECLARE VARIABLE XICMS CHAR(1);
BEGIN

  /* PEGO DADOS INICIAIS */
  SELECT
    CODIGO,
    PS,
    DESCRICAO,
    PRECOVENDA,
    ICMS,
    CODSERVICO
  FROM
    PRODUTOS
  WHERE
    BARRA = :BARRA
  INTO
    :CODIGO,
    :PS,
    :DESCRICAO,
    :VALOR,
    :ICMS,
    :CODSERVICO;

  /* DADOS DA OPERAÇÃO */
  SELECT
    NA.ESTOQUE,
    NA.ICMS
  FROM
    NATUOPER NA
    JOIN MOVIMENTOS MO ON
      (MO.NOTA_CODNATUOPER = NA.CODIGO)
  WHERE
    MO.CODIGO = :CODMOVIMENTO
  INTO
    :XESTOQUE,
    :XICMS;

  /* SE NAO POSSUIR MOVIMENTACAO DE ESTOQUE */
  IF (XESTOQUE = 'N') THEN
   BEGIN
     QUANTIDADE = 9999;
     IF (XICMS = 'N') THEN
       ICMS = 0;
     SUSPEND;
     EXIT;
   END

  /* SE FOR SERVIÇO */
  if (PS = 'S') then
   begin
     ICMS = 0;
     QUANTIDADE = 9999;
     SUSPEND;
     EXIT;
   end

  /* EXISTE MESMO? */
  SELECT
    COUNT(*)
  FROM
    INDIVIDUAIS
  WHERE
    BARRA = :BARRA AND
    VENDIDO = 'N' AND
    CODEMPRESA = :CODEMPRESA
  INTO
    :CODIGO;

  IF (CODIGO IS NULL) THEN
    CODIGO = 0;

  IF (CODIGO = 0) THEN
     EXCEPTION ITEM_ERRADO;

  /* SE EXISTIR, RETORNO */
  FOR
  SELECT
    INDIVIDUAIS.CODIGO,
    INDIVIDUAIS.CODPRODUTO,
    INDIVIDUAIS.UNICO,
    INDIVIDUAIS.SERIE,
    PRODUTOS.PRECOVENDA,
    PRODUTOS.ICMS,
    PRODUTOS.DESCRICAO,
    PRODUTOS.CODSERVICO
  FROM
    INDIVIDUAIS
    JOIN PRODUTOS ON
      (INDIVIDUAIS.CODPRODUTO = PRODUTOS.CODIGO)
  WHERE
    INDIVIDUAIS.BARRA = :BARRA AND
    INDIVIDUAIS.VENDIDO = 'N' AND
    INDIVIDUAIS.CODPRODUTO = PRODUTOS.CODIGO AND
    INDIVIDUAIS.CODEMPRESA = :CODEMPRESA
  INTO
    :CODIGO,
    :CODPRODUTO,
    :UNICO,
    :NUMSERIE,
    :VALOR,
    :ICMS,
    :DESCRICAO,
    :CODSERVICO
  DO
  BEGIN

    /* SE FOR INDIVIDUAL, RETORNO SOMENTE ELE */
    IF (UNICO = 1) THEN
     BEGIN

       IF (NUMSERIE IS NOT NULL) THEN
         DESCRICAO = DESCRICAO || ' - ' || NUMSERIE;
       QUANTIDADE = 1;

     END ELSE
     BEGIN

       /* SE FOR NORMAL, SOMO A QUANTIDADE */
       SELECT
         SUM(QUANTIDADE)
       FROM
         INDIVIDUAIS
       WHERE
         BARRA = :BARRA AND
         VENDIDO = 'N'
       INTO
         :QUANTIDADE;

     END

    /* VERIFICO SE O ICMS EH SIMPLES OU NAO */
    SELECT
      ICMSSIMPLES,
      ALIQUOTA_ICMSSIMPLES
    FROM
      SISCONFIG
    WHERE
      CODIGO = :CODEMPRESA
    INTO
      :ICMSSIMPLES,
      :ALIQUOTA_ICMSSIMPLES;

    IF (ICMSSIMPLES = 'S') THEN
      ICMS = CAST(ALIQUOTA_ICMSSIMPLES AS NUMERIC(9, 2));

    SUSPEND;
    EXIT;

  END
END

^

SET TERM ; ^

INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (177, CURRENT_TIMESTAMP);
COMMIT;