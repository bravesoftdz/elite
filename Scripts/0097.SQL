/*
** ESTOQUE COMPLETO
*/

CREATE PROCEDURE ESTOQUE 
RETURNS (
    CODIGO INTEGER,
    BARRA CHAR(14),
    DESCRICAO VARCHAR(60),
    PRECOCUSTO NUMERIC(9,2),
    PRECOVENDA NUMERIC(9,2),
    TOTALCUSTO NUMERIC(9,2),
    TOTALVENDA NUMERIC(9,2),
    LUCRO NUMERIC(9,4),
    OCULTO CHAR(1),
    MINIMO NUMERIC(9,2),
    GRUPO VARCHAR(40),
    QUANTIDADE NUMERIC(9,2),
    TOTALSERVICO NUMERIC(9,2))
AS
BEGIN

  FOR
  SELECT
    PO.CODIGO,
    PO.BARRA,
    PO.DESCRICAO,
    PO.PRECOCUSTO,
    PO.PRECOVENDA,
    CAST(PO.MARGEM AS NUMERIC(9, 4)) AS LUCRO,
    PO.OCULTO,
    PO.MINIMO,
    GU.GRUPO,
    (
       SELECT
         SUM(QUANTIDADE)
       FROM
         INDIVIDUAIS ID
       WHERE
         ID.CODPRODUTO = PO.CODIGO AND
         ID.VENDIDO = 'N'
    ) AS QUANTIDADE,
    (
       SELECT
         (SE.PRECOVENDA + PO.PRECOVENDA)
       FROM
         PRODUTOS SE
       WHERE
         SE.CODIGO = PO.CODSERVICO AND
         SE.PS = 'S'
     ) AS TOTALSERVICO
  FROM
    PRODUTOS PO
    LEFT JOIN GRUPOS GU ON
      (GU.CODIGO = PO.GRUPO)
  WHERE
    PO.PS = 'P'
  INTO
    :CODIGO,
    :BARRA,
    :DESCRICAO,
    :PRECOCUSTO,
    :PRECOVENDA,
    :LUCRO,
    :OCULTO,
    :MINIMO,
    :GRUPO,
    :QUANTIDADE,
    :TOTALSERVICO
  DO
  BEGIN
    TOTALCUSTO = (PRECOCUSTO * QUANTIDADE);
    TOTALVENDA = (PRECOVENDA * QUANTIDADE);

    SUSPEND;
  END
END!

GRANT EXECUTE ON PROCEDURE ESTOQUE TO PUBLIC!

INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (97, CURRENT_TIMESTAMP)!
