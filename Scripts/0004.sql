
CREATE TABLE MARCAS (
  CODIGO	INTEIRO_VALIDO,
  DESCRICAO     STR40_VALIDO,
  CONSTRAINT	EQUIPAMENTO_PK
  PRIMARY KEY 	(CODIGO)
)!

GRANT ALL ON MARCAS TO PUBLIC!

CREATE TABLE MODELOS (
  CODIGO		INTEIRO_VALIDO,
  CODEQUIPAMENTO	INTEIRO_VALIDO,
  DESCRICAO		STR40_VALIDO,
  CONSTRAINT		MODELOS_PK
  PRIMARY KEY		(CODIGO, CODEQUIPAMENTO),
  CONSTRAINT		MODELOS_FK01
  FOREIGN KEY		(CODEQUIPAMENTO)
  REFERENCES		MARCAS (CODIGO)
)!

GRANT ALL ON MODELOS TO PUBLIC!

CREATE TABLE DEFEITOS (
  CODIGO		INTEIRO_VALIDO,
  DESCRICAO		STR40_VALIDO,
  CONSTRAINT		DEFEITO_PK
  PRIMARY KEY		(CODIGO)
)!

GRANT ALL ON DEFEITOS TO PUBLIC!

CREATE DOMAIN INTLOGOFF INTEGER DEFAULT 30 NOT NULL CHECK(VALUE BETWEEN 30 AND 600)!

ALTER TABLE SISCONFIG ADD
   LOGTIMEOFF INTLOGOFF!

UPDATE SISCONFIG SET LOGTIMEOFF = 30!

DROP TRIGGER MOVIMENTOS_AFTINS!

DROP TRIGGER MOVIMENTOS_AFTUPD!

DROP PROCEDURE GERAPARCELAS!

DROP PROCEDURE MOEDAEXTENSO!

DROP VIEW CONFIG_PADRAO!

CREATE VIEW CONFIG_PADRAO(
    CODIGO,
    CODCLIENTE,
    CODCONTA_COMPRACRE,
    CODCONTA_COMPRADEB,
    CODCONTA_VENDACRE,
    CODCONTA_VENDADEB,
    CODCLIENTE_PADRAO,
    VALOR_LIMITE,
    ALIQUOTA_ISS,
    ALIQUOTA_ICMSSIMPLES,
    ICMSSIMPLES,
    CODDOC_AVISTA,
    CODDOC_PRAZO,
    MDI,
    AUTOLAUNCH,
    AUTOLAUNCH_TIME,
    PADRAO,
    PRINT_OS,
    PRINT_NOTA,
    PRINT_BOLETO,
    MOEDASINGULAR,
    MOEDAPLURAL,
    CENTAVOSINGULAR,
    CENTAVOPLURAL,
    NOTA_PADRAO,
    OSABERTA_PADRAO,
    OSFECHADA_PADRAO,
    MEDIDA_SER,
    GRUPO_SER,
    LOGTIMEOFF)
AS
SELECT
	SISCONFIG.CODIGO,
	SISCONFIG.CODCLIENTE,
	SISCONFIG.CODCONTA_COMPRACRE,
	SISCONFIG.CODCONTA_COMPRADEB,
	SISCONFIG.CODCONTA_VENDACRE,
	SISCONFIG.CODCONTA_VENDADEB,
	SISCONFIG.CODCLIENTE_PADRAO,
	SISCONFIG.VALOR_LIMITE,
	SISCONFIG.ALIQUOTA_ISS,
	SISCONFIG.ALIQUOTA_ICMSSIMPLES,
	SISCONFIG.ICMSSIMPLES,
	SISCONFIG.CODDOC_AVISTA,
	SISCONFIG.CODDOC_PRAZO,
	SISCONFIG.MDI,
	SISCONFIG.AUTOLAUNCH,
	SISCONFIG.AUTOLAUNCH_TIME,
	SISCONFIG.PADRAO,
	SISCONFIG.PRINT_OS,
	SISCONFIG.PRINT_NOTA,
  	SISCONFIG.PRINT_BOLETO,
      SISCONFIG.MOEDASINGULAR,
      SISCONFIG.MOEDAPLURAL,
      SISCONFIG.CENTAVOSINGULAR,
      SISCONFIG.CENTAVOPLURAL,
      SISCONFIG.NOTA_PADRAO,
      SISCONFIG.OSABERTA_PADRAO,
      SISCONFIG.OSFECHADA_PADRAO,
      SISCONFIG.MEDIDA_SER,
      SISCONFIG.GRUPO_SER,
      SISCONFIG.LOGTIMEOFF
FROM
	SISCONFIG
WHERE
	SISCONFIG.PADRAO = 'S'
!

GRANT SELECT ON CONFIG_PADRAO TO PUBLIC!

CREATE PROCEDURE GERAPARCELAS (
    CODIGO INTEGER)
AS
   DECLARE VARIABLE TOTAL      NUMERIC(9, 2);
   DECLARE VARIABLE PARCELA    NUMERIC(9, 2);
   DECLARE VARIABLE CONDICAO   VARCHAR(40);
   DECLARE VARIABLE QUANTIDADE INTEGER;
   DECLARE VARIABLE ES         INTEGER;
   DECLARE VARIABLE N          INTEGER;
   DECLARE VARIABLE CODPAG     INTEGER;
   DECLARE VARIABLE DATAMOV    DATE;
   DECLARE VARIABLE DIAS       INTEGER;
   DECLARE VARIABLE CODDOC     INTEGER;
   DECLARE VARIABLE CODPAGO    INTEGER;
   DECLARE VARIABLE DOCVISTA   INTEGER;
   DECLARE VARIABLE DOCPRAZO   INTEGER;
   DECLARE VARIABLE DESCRICAO  CHAR(40);
BEGIN
   SELECT
      CODDOC_AVISTA,
      CODDOC_PRAZO
   FROM
      CONFIG_PADRAO
   INTO
      :DOCVISTA,
      :DOCPRAZO;
   SELECT
      VALOR_TOTAL,
      CONDICAO,
      ES,
      DATA
   FROM
      MOVIMENTOS
   WHERE
      CODIGO = :CODIGO
   INTO
      :TOTAL,
      :CONDICAO,
      :ES,
      :DATAMOV;
   IF (TOTAL <= 0) THEN EXIT;
   SELECT
      COUNT(*)
   FROM
      PARCELAS(
        :CONDICAO
      )
   INTO
      :QUANTIDADE;
   IF (QUANTIDADE > 0) THEN
    BEGIN
     DELETE FROM
      PAGAMENTOS
     WHERE
      CODMOVIMENTO = :CODIGO;
     PARCELA = CAST((TOTAL / QUANTIDADE) AS INTEGER);
     N = 0;
     FOR
     SELECT DIAS FROM PARCELAS(:CONDICAO) INTO :DIAS DO
      BEGIN
       N = N + 1;
       IF (ES = 1) THEN
          DESCRICAO = 'PARCELA ' || N || '/' || QUANTIDADE || ' DA COMPRA ' || CODIGO;
       ELSE
          DESCRICAO = 'PARCELA ' || N || '/' || QUANTIDADE || ' DA VENDA ' || CODIGO;
       SELECT SEQUENCIA + 1 FROM SEQUENCIA WHERE TABELA = 'PAGAMENTOS' INTO :CODPAG;
       UPDATE SEQUENCIA SET SEQUENCIA = :CODPAG WHERE TABELA = 'PAGAMENTOS';
       if (DIAS = 0) then
        begin
          CODDOC = DOCVISTA;
          CODPAGO = 1;
        end else
        begin
          CODDOC = DOCPRAZO;
          CODPAGO = 0;
        end
       INSERT INTO PAGAMENTOS (CODIGO, CODMOVIMENTO, NUMERO, DESCRICAO, ES,
         VALOR, DATAVENCIMENTO, CODDOCUMENTO, PAGO) VALUES (:CODPAG, :CODIGO, :N,
         :DESCRICAO, :ES, :PARCELA, :DATAMOV + :DIAS, :CODDOC, :CODPAGO);
      END
     UPDATE PAGAMENTOS SET VALOR = VALOR + (:TOTAL - (:PARCELA * :QUANTIDADE))
       WHERE CODMOVIMENTO = :CODIGO AND NUMERO = 1;
    END ELSE EXCEPTION CONDICAO_ERRADA;
END!

GRANT EXECUTE ON PROCEDURE GERAPARCELAS TO PUBLIC!

CREATE TRIGGER MOVIMENTOS_AFTINS FOR MOVIMENTOS
ACTIVE AFTER INSERT POSITION 0
AS
BEGIN
  IF ((NEW.ES IN (1, 2)) AND (NEW.TIPO IN (1, 2, 5)))THEN
    IF (NEW.VALOR_TOTAL > 0) THEN
      EXECUTE PROCEDURE GERAPARCELAS(NEW.CODIGO);
END!

CREATE TRIGGER MOVIMENTOS_AFTUPD FOR MOVIMENTOS
ACTIVE AFTER UPDATE POSITION 0
AS
BEGIN
  IF ((NEW.ES IN (1, 2)) AND (NEW.TIPO IN (1, 2, 5)))THEN
   IF ((NEW.VALOR_TOTAL <> OLD.VALOR_TOTAL) OR
      (NEW.CONDICAO <> OLD.CONDICAO)) THEN
     EXECUTE PROCEDURE GERAPARCELAS(NEW.CODIGO);
  IF (NEW.ES = 9) THEN
     DELETE FROM PAGAMENTOS WHERE CODMOVIMENTO = NEW.CODIGO;
END!

CREATE PROCEDURE MOEDAEXTENSO (
    VALOR DOUBLE PRECISION)
RETURNS (
    EXTENSO VARCHAR(254))
AS
  DECLARE VARIABLE MOEDA           VARCHAR(40);
  DECLARE VARIABLE CENTAVO         VARCHAR(40);
  DECLARE VARIABLE MOEDASINGULAR   VARCHAR(40);
  DECLARE VARIABLE MOEDAPLURAL     VARCHAR(40);
  DECLARE VARIABLE CENTAVOSINGULAR VARCHAR(40);
  DECLARE VARIABLE CENTAVOPLURAL   VARCHAR(40);
  DECLARE VARIABLE VALTEMP         INTEGER;
  DECLARE VARIABLE CENTEMP         INTEGER;
  DECLARE VARIABLE TEMPCONST       VARCHAR(254);
BEGIN

  /* PEGO A MOEDA */
  SELECT
    MOEDASINGULAR,
    MOEDAPLURAL,
    CENTAVOSINGULAR,
    CENTAVOPLURAL
  FROM
    CONFIG_PADRAO
  INTO
    :MOEDASINGULAR,
    :MOEDAPLURAL,
    :CENTAVOSINGULAR,
    :CENTAVOPLURAL;

  MOEDA   = '';
  CENTAVO = '';

  /* VALOR INTEIRO */
 VALTEMP = F_TRUNCATE ( VALOR );

  IF ( VALTEMP > 0 ) THEN
   IF ( VALTEMP = 1 ) THEN
    MOEDA = MOEDASINGULAR;
   ELSE
    MOEDA = MOEDAPLURAL;

 /* BUSCO O EXTENSO */
 EXECUTE PROCEDURE
    VALOREXTENSO( :VALTEMP )
  RETURNING_VALUES
    :EXTENSO;

  EXTENSO = EXTENSO || ' ' || MOEDA;

  /* CENTAVOS */
  VALOR   = VALOR - VALTEMP;
  CENTEMP = CAST(( VALOR * 100 ) AS INTEGER);

  IF ( CENTEMP > 0 ) THEN
   BEGIN
    IF ( CENTEMP = 1 ) THEN
     CENTAVO = CENTAVOSINGULAR;
    ELSE
     CENTAVO = CENTAVOPLURAL;

    /* BUSCO O EXTENSO */
    EXECUTE PROCEDURE
      VALOREXTENSO( :CENTEMP )
    RETURNING_VALUES
      :TEMPCONST;

    IF ( VALTEMP > 0 ) THEN
     EXTENSO = EXTENSO || ' E ' || TEMPCONST || ' ' || CENTAVO;
    ELSE
      EXTENSO = TEMPCONST || ' ' || CENTAVO || ' DE ' || MOEDASINGULAR;
   END

  SUSPEND;

END!

GRANT EXECUTE ON PROCEDURE MOEDAEXTENSO TO PUBLIC!

ALTER TABLE MOVIMENTOS ADD CODMARCA INTEIRO!

ALTER TABLE MOVIMENTOS ADD CODMODELO INTEIRO!

ALTER TABLE MOVIMENTOS ADD CODDEFEITO INTEIRO!

ALTER TABLE MOVIMENTOS ADD CONSTRAINT MOVIMENTOS_FK05
   FOREIGN KEY (CODMODELO, CODMARCA)
   REFERENCES MODELOS (CODIGO, CODEQUIPAMENTO)!

ALTER TABLE MOVIMENTOS ADD CONSTRAINT MOVIMENTOS_FK06
   FOREIGN KEY (CODDEFEITO)
   REFERENCES DEFEITOS (CODIGO)!

ALTER TABLE MOVIMENTOS ADD GARANTIA SIMNAO!

ALTER TABLE MOVIMENTOS ADD SERIE STR30!

ALTER TABLE MOVIMENTOS ADD ACESSORIOS STR50!

ALTER TABLE MOVIMENTOS ADD DATAPREVISAO DATA!

ALTER TABLE MOVIMENTOS ADD CODTECNICO INTEIRO!

ALTER TABLE MOVIMENTOS ADD CODRESPONSAVEL INTEIRO!

