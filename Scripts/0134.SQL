/*
** ESCONDO PAGAMENTOS DE VENDA E OS ABERTAS
*/

SET TERM !;

ALTER PROCEDURE GERAPARCELAS (
    CODIGO INTEGER)
AS
DECLARE VARIABLE TOTAL NUMERIC(9,2);
DECLARE VARIABLE PARCELA NUMERIC(9,2);
DECLARE VARIABLE CONDICAO VARCHAR(40);
DECLARE VARIABLE QUANTIDADE INTEGER;
DECLARE VARIABLE ES INTEGER;
DECLARE VARIABLE N INTEGER;
DECLARE VARIABLE CODPAG INTEGER;
DECLARE VARIABLE DATAMOV DATE;
DECLARE VARIABLE DIAS INTEGER;
DECLARE VARIABLE CODDOC INTEGER;
DECLARE VARIABLE CODPAGO INTEGER;
DECLARE VARIABLE DOCVISTA INTEGER;
DECLARE VARIABLE DOCPRAZO INTEGER;
DECLARE VARIABLE DESCRICAO CHAR(40);
DECLARE VARIABLE TIPO INTEGER;
DECLARE VARIABLE CODCONTA_COMPRADEB INTEGER;
DECLARE VARIABLE CODCONTA_VENDACRE INTEGER;
DECLARE VARIABLE CODCONTA INTEGER;
DECLARE VARIABLE NOME VARCHAR(16);
DECLARE VARIABLE CODCLIENTE INTEGER;
DECLARE VARIABLE CODEMPRESA INTEGER;
DECLARE VARIABLE CODCENTRO INTEGER;
DECLARE VARIABLE XES INTEGER;
BEGIN

   /* DADOS DO MOVIMENTO */
   SELECT
      NOTA_VALOR_TOTAL,
      CONDICAO,
      ES,
      CURRENT_DATE,
      TIPO,
      CODCLIENTE,
      CODEMPRESA,
      CODCENTRO
   FROM
      MOVIMENTOS
   WHERE
      CODIGO = :CODIGO
   INTO
      :TOTAL,
      :CONDICAO,
      :ES,
      :DATAMOV,
      :TIPO,
      :CODCLIENTE,
      :CODEMPRESA,
      :CODCENTRO;

   /* DADOS DO PERFIL DA EMPRESA */
   SELECT
      CODDOC_AVISTA,
      CODDOC_PRAZO,
      CODCONTA_COMPRADEB,
      CODCONTA_VENDACRE
   FROM
      SISCONFIG
   WHERE
      CODIGO = :CODEMPRESA
   INTO
      :DOCVISTA,
      :DOCPRAZO,
      :CODCONTA_COMPRADEB,
      :CODCONTA_VENDACRE;

   /* SE FOR ENTRADA */
   IF (ES = 1) THEN
    BEGIN

     CODCONTA = CODCONTA_COMPRADEB;

     SELECT
       UDF_LEFT(NOME, 16)
     FROM
       CLIENTES
     WHERE
       CODIGO = :CODCLIENTE
     INTO
       :NOME;

    END ELSE
    /* SE FOR UMA SAIDA */
    BEGIN

     CODCONTA = CODCONTA_VENDACRE;

     SELECT
       UDF_LEFT(NOME, 16)
     FROM
       CLIENTES
     WHERE
       CODIGO = :CODCLIENTE
     INTO
       :NOME;

   END

   /* SE O VALOR FOR ZERO NAO GERO NADA */
   IF (TOTAL <= 0) THEN EXIT;

   /* QUANTIDADE DE PARCELAS */
   SELECT
      COUNT(*)
   FROM
      PARCELAS(
        :CONDICAO
      )
   INTO
      :QUANTIDADE;

   /* SE TIVER PELO MENOS 1 PARCELA, GERO */
   IF (QUANTIDADE > 0) THEN
    BEGIN

      /* APAGO AS PARCELAS ANTIGAS */
      DELETE FROM
        PAGAMENTOS
      WHERE
        CODMOVIMENTO = :CODIGO;

      /* VALOR DA PARCELA */
      PARCELA = CAST((TOTAL / QUANTIDADE) AS INTEGER);

      /* GERACAO DAS PARCELAS */
      N = 0;
      FOR
      SELECT
        DIAS
      FROM
        PARCELAS(:CONDICAO)
      INTO
        :DIAS
      DO
      BEGIN

        /* NUMERO DA PARCELA */
        N = N + 1;

        /* DESCRICAO DA PARCELA */
        IF (ES = 1) THEN
          DESCRICAO = 'PARC ' || N || '/' || QUANTIDADE || ' COMPRA ' || CODIGO || ' ' || NOME;
        ELSE
          DESCRICAO = 'PARC ' || N || '/' || QUANTIDADE || ' VENDA ' || CODIGO || ' ' || NOME;

        /* CODIGO SEQUENCIAL */
        SELECT
          SEQUENCIA
        FROM
          SEQ_OBTER('PAGAMENTOS')
        INTO
          :CODPAG;

        /* PARCELA A VISTA X PARCELA A PRAZO */
        IF (DIAS = 0) THEN
         BEGIN
           CODDOC = DOCVISTA;
           CODPAGO = 0;
         END ELSE
         BEGIN
           CODDOC = DOCPRAZO;
           CODPAGO = 0;
         END

        /* ESCONDO OS PAGAMENTOS DE OS E VENDA ABERTAS */
        XES = ES;
        IF ((XES = 2) AND (TIPO IN (3, 5))) THEN
          XES = 0;

        /* INSIRO A PARCELA */
        INSERT INTO
          PAGAMENTOS (
            CODIGO,
            CODMOVIMENTO,
            NUMERO,
            DESCRICAO,
            ES,
            VALOR,
            DATAVENCIMENTO,
            CODDOCUMENTO,
            PAGO,
            CODCONTA,
            CODEMPRESA,
            CODCENTRO,
            CODCLIENTE)
          VALUES (
            :CODPAG,
            :CODIGO,
            :N,
            :DESCRICAO,
            :XES,
            :PARCELA,
            :DATAMOV + :DIAS,
            :CODDOC,
            :CODPAGO,
            :CODCONTA,
            :CODEMPRESA,
            :CODCENTRO,
            :CODCLIENTE);

      END

      /* DIFERENÇA NA PRIMEIRA PARCELA */
      UPDATE
        PAGAMENTOS
      SET
        VALOR = VALOR + (:TOTAL - (:PARCELA * :QUANTIDADE))
      WHERE
        CODMOVIMENTO = :CODIGO AND NUMERO = 1;

    END ELSE EXCEPTION CONDICAO_ERRADA;
END!

ALTER TRIGGER MOVIMENTOS_AFTINS
AS
BEGIN
  IF (NEW.ES IN (1, 2)) THEN
    IF (NEW.VALOR_TOTAL > 0) THEN
      EXECUTE PROCEDURE GERAPARCELAS(NEW.CODIGO);
END!

ALTER TRIGGER MOVIMENTOS_AFTUPD
AS
BEGIN
  IF (NEW.ES IN (1, 2)) THEN
   BEGIN
     IF (((NEW.VALOR_TOTAL <> OLD.VALOR_TOTAL) OR
        (NEW.CONDICAO <> OLD.CONDICAO)) AND
        (NEW.TIPO IN (1, 2, 5))) THEN
           EXECUTE PROCEDURE GERAPARCELAS(NEW.CODIGO);
     IF ((NEW.TIPO IN (3, 6)) AND (OLD.TIPO IN (2, 5))) THEN
           EXECUTE PROCEDURE AUTOBAIXA(NEW.CODIGO);
   END
  IF ((NEW.TIPO = 9) OR (NEW.VALOR_TOTAL = 0)) THEN
     DELETE FROM PAGAMENTOS WHERE CODMOVIMENTO = NEW.CODIGO AND
       PAGO = 0;
END!

ALTER PROCEDURE AUTOBAIXA (
    CODMOVIMENTO INTEGER)
AS
DECLARE VARIABLE CODDOC_AVISTA INTEGER;
DECLARE VARIABLE CODIGO INTEGER;
DECLARE VARIABLE CODDOCUMENTO INTEGER;
DECLARE VARIABLE DATAVENCIMENTO TIMESTAMP;
DECLARE VARIABLE PAGO INTEGER;
DECLARE VARIABLE PARCELA_TOTAL NUMERIC(9,2);
DECLARE VARIABLE MOVIMENTO_TOTAL NUMERIC(9,2);
DECLARE VARIABLE VALOR_COMISSAO NUMERIC(9,2);
DECLARE VARIABLE XPARC INTEGER;
DECLARE VARIABLE CODEMPRESA INTEGER;
DECLARE VARIABLE CLIENTE_COMISSIONADO CHAR(1);
DECLARE VARIABLE VALOR_SERVICO NUMERIC(9,2);
DECLARE VARIABLE PRODUTO_COMISSIONADO CHAR(1);
DECLARE VARIABLE TOTAL_SERVICOS_COMIS NUMERIC(9,2);
BEGIN
  /* VERIFICO SE OS VALORES SAO CORRESPONDENTES */
  SELECT
    COUNT(CODIGO),
    SUM(VALOR)
  FROM
    PAGAMENTOS
  WHERE
    CODMOVIMENTO = :CODMOVIMENTO
  INTO
    :XPARC,
    :PARCELA_TOTAL;

  /* COMISSIONAMENTO DE VENDEDORES */
  SELECT
    NOTA_VALOR_TOTAL,
    VALOR_COMISSAO,
    CODEMPRESA
  FROM
    MOVIMENTOS
  WHERE
    CODIGO = :CODMOVIMENTO
  INTO
    :MOVIMENTO_TOTAL,
    :VALOR_COMISSAO,
    :CODEMPRESA;

  /* CALCULO A COMISSAO DE CADA PARCELA, COM SEGURANCA */
  IF (VALOR_COMISSAO IS NULL) THEN
    VALOR_COMISSAO = 0;
  IF (XPARC IS NULL) THEN
    XPARC = 0;

  IF ((VALOR_COMISSAO > 0) AND (XPARC > 0)) THEN
    VALOR_COMISSAO = (VALOR_COMISSAO / CAST(XPARC AS NUMERIC(9,2)));

  IF (MOVIMENTO_TOTAL > PARCELA_TOTAL) THEN
    EXCEPTION VALOR_PARCELA;

  /**/
  /**  COMISSIONAMENTO DE SERVIÇOS */
  /**/
  TOTAL_SERVICOS_COMIS = 0;

  SELECT
    CL.COMISSIONADO
  FROM
    CLIENTES CL
    JOIN MOVIMENTOS MO ON
      (CL.CODIGO = MO.CODCLIENTE)
  WHERE
    MO.CODIGO = :CODMOVIMENTO
  INTO
    :CLIENTE_COMISSIONADO;

  IF (CLIENTE_COMISSIONADO = 'S') THEN
   BEGIN

     FOR
     SELECT
       ID.VALOR_PAGO,
       PO.COMISSIONADO
     FROM
       INDIVIDUAIS ID
       JOIN PRODUTOS PO ON
         (ID.CODPRODUTO = PO.CODIGO)
     WHERE
       ID.CODMOVSAIDA = :CODMOVIMENTO AND
       ID.VENDIDO = 'S' AND
       PO.PS = 'S'
     INTO
       :VALOR_SERVICO,
       :PRODUTO_COMISSIONADO
     DO
     IF (PRODUTO_COMISSIONADO = 'S') THEN
       TOTAL_SERVICOS_COMIS = TOTAL_SERVICOS_COMIS + VALOR_SERVICO;

     UPDATE
       OS_VENDER
     SET
       TOTAL_SERVICOS = :TOTAL_SERVICOS_COMIS
     WHERE
       CODMOVIMENTO = :CODMOVIMENTO;

   END

  /* APOS FECHADO, MOSTRO AS PARCELAS */
  UPDATE
    PAGAMENTOS
  SET
    ES = 2
  WHERE
    CODMOVIMENTO = :CODMOVIMENTO;

  /* QUAL É O DOCUMENTO A VISTA? */
  SELECT
    CODDOC_AVISTA
  FROM
    SISCONFIG
  WHERE
    CODIGO = :CODEMPRESA
  INTO
    :CODDOC_AVISTA;

  /* PROCURO OS PAGAMENTOS, ALGUM É A VISTA? */
  FOR
  SELECT
    CODIGO,
    CODDOCUMENTO,
    DATAVENCIMENTO,
    PAGO
  FROM
    PAGAMENTOS
  WHERE
    CODMOVIMENTO = :CODMOVIMENTO
  INTO
    :CODIGO,
    :CODDOCUMENTO,
    :DATAVENCIMENTO,
    :PAGO
  DO
  BEGIN
    /* ATUALIZO A COMISSAO */
    UPDATE
      PAGAMENTOS
    SET
      VALOR_COMISSAO = :VALOR_COMISSAO
    WHERE
      CODIGO = :CODIGO;

    /* O DOCUMENTO É A VISTA? */
    IF ((CODDOCUMENTO = CODDOC_AVISTA) AND (PAGO = 0)) THEN
     BEGIN

      /* FAÇO O LANÇAMENTO */
      UPDATE
        PAGAMENTOS
      SET
        PAGO = 1
      WHERE
        CODIGO = :CODIGO;

     END
  END
END!

ALTER TRIGGER MOVIMENTOS_AFTUPD
AS
BEGIN
  IF (NEW.ES IN (1, 2)) THEN
   BEGIN
     IF (((NEW.VALOR_TOTAL <> OLD.VALOR_TOTAL) OR
        (NEW.CONDICAO <> OLD.CONDICAO)) AND
        (NEW.TIPO IN (1, 2, 5))) THEN
           EXECUTE PROCEDURE GERAPARCELAS(NEW.CODIGO);
     IF ((NEW.TIPO IN (3, 6)) AND (OLD.TIPO IN (2, 5))) THEN
           EXECUTE PROCEDURE AUTOBAIXA(NEW.CODIGO);
   END
  IF ((NEW.TIPO = 9) OR (NEW.VALOR_TOTAL = 0)) THEN
     DELETE FROM PAGAMENTOS WHERE CODMOVIMENTO = NEW.CODIGO AND
       PAGO = 0;
END!

INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (134, CURRENT_TIMESTAMP)!