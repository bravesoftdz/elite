ALTER PROCEDURE ITVENDA_GRAVA (
    BARRA CHAR(14),
    QUANTIDADE NUMERIC(9,2),
    VALOR NUMERIC(9,2),
    DESCONTO NUMERIC(9,2),
    ICMS NUMERIC(9,2),
    CODMOVSAIDA INTEGER)
AS
  DECLARE VARIABLE XCODIGO       INTEGER;
  DECLARE VARIABLE XCODITEM      INTEGER;
  DECLARE VARIABLE XCODPRODUTO   INTEGER;
  DECLARE VARIABLE XCODMOVENTRADA INTEGER;
  DECLARE VARIABLE XSEQUENCIA     CHAR(4);
  DECLARE VARIABLE XSERIE         CHAR(20);
  DECLARE VARIABLE XVENDIDO       CHAR(1);
  DECLARE VARIABLE XCODMOVSAIDA   INTEGER;
  DECLARE VARIABLE XVALOR_VENDA   NUMERIC(9, 2);
  DECLARE VARIABLE XICMSVENDA     NUMERIC(9, 2);
  DECLARE VARIABLE XDESCONTO      NUMERIC(9, 2);
  DECLARE VARIABLE XIMPETIQ       CHAR(1);
  DECLARE VARIABLE XBARRA         CHAR(14);
  DECLARE VARIABLE XQUANTIDADE    NUMERIC(9, 2);
  DECLARE VARIABLE XUNICO         INTEGER;
  DECLARE VARIABLE BAIXA          NUMERIC(9, 2);
  DECLARE VARIABLE SOBRA          NUMERIC(9, 2);
  DECLARE VARIABLE NSEQ           INTEGER;
  DECLARE VARIABLE PS             CHAR(1);
  DECLARE VARIABLE XPRECOCUSTO    NUMERIC(9, 2);
BEGIN
  SELECT
    CODIGO,
    PRECOCUSTO,
    PS
  FROM
    PRODUTOS
  WHERE
    BARRA = :BARRA
  INTO
    :XCODPRODUTO,
    :XPRECOCUSTO,
    :PS;
  IF ((PS = 'P') OR (PS IS NULL)) THEN
   BEGIN
    SELECT SUM(QUANTIDADE) FROM INDIVIDUAIS
      WHERE BARRA = :BARRA AND VENDIDO = 'S' AND CODMOVSAIDA = :CODMOVSAIDA
      INTO :XQUANTIDADE;
    IF (XQUANTIDADE IS NULL) THEN XQUANTIDADE = 0;
    IF (XQUANTIDADE > 0) THEN
      EXCEPTION ITEM_REPETIDO;
    SELECT SUM(QUANTIDADE) FROM INDIVIDUAIS
    WHERE BARRA = :BARRA AND VENDIDO = 'N'
    INTO :XQUANTIDADE;
    IF (QUANTIDADE <= XQUANTIDADE) THEN
      BEGIN
        FOR
        SELECT CODIGO, CODITEM, CODPRODUTO, CODMOVENTRADA, SEQUENCIA, SERIE,
          VENDIDO, CODMOVSAIDA, VALOR_VENDA, ICMSVENDA, DESCONTO, IMPETIQ,
          BARRA, QUANTIDADE, UNICO FROM INDIVIDUAIS
          WHERE BARRA = :BARRA AND VENDIDO = 'N' ORDER BY CODIGO
          INTO :XCODIGO, :XCODITEM, :XCODPRODUTO, :XCODMOVENTRADA,
          :XSEQUENCIA, :XSERIE, :XVENDIDO, :XCODMOVSAIDA, :XVALOR_VENDA,
          :XICMSVENDA, :XDESCONTO, :XIMPETIQ, :XBARRA, :XQUANTIDADE, :XUNICO
        DO
        BEGIN
          IF (QUANTIDADE > 0) THEN
            BEGIN
              SOBRA = 0;
              IF (QUANTIDADE >= XQUANTIDADE) THEN
                BEGIN
                  BAIXA = XQUANTIDADE;
                END ELSE
                BEGIN
                  BAIXA = QUANTIDADE;
                  SOBRA = XQUANTIDADE - BAIXA;
                END
              QUANTIDADE = QUANTIDADE - BAIXA;
              UPDATE INDIVIDUAIS SET QUANTIDADE = :BAIXA,
                CODMOVSAIDA = :CODMOVSAIDA, VALOR_VENDA = :VALOR,
                DESCONTO = :DESCONTO, VENDIDO = 'S', ICMSVENDA = :ICMS
                WHERE CODIGO = :XCODIGO;
              IF (SOBRA > 0) THEN
                BEGIN
                  EXECUTE PROCEDURE SEQ_OBTER 'INDIVIDUAIS'
                    RETURNING_VALUES NSEQ;
                  XVENDIDO = 'N';
                  INSERT INTO INDIVIDUAIS (CODIGO, CODITEM, CODPRODUTO,
                    CODMOVENTRADA, SEQUENCIA, SERIE, VENDIDO, VALOR_VENDA,
                    ICMSVENDA, DESCONTO, IMPETIQ, BARRA, QUANTIDADE, UNICO,
                    FRACIONADO) VALUES (:NSEQ, :XCODITEM, :XCODPRODUTO,
                    :XCODMOVENTRADA, :XSEQUENCIA, :XSERIE, :XVENDIDO,
                    :XVALOR_VENDA, :XICMSVENDA, :XDESCONTO, :XIMPETIQ,
                    :XBARRA, :SOBRA, :XUNICO, 'S');
              END
            END ELSE EXIT;
        END
      END ELSE EXCEPTION ITEM_ESGOTADO;
    END ELSE
    BEGIN
      EXECUTE PROCEDURE SEQ_OBTER 'TEMPITENS'
         RETURNING_VALUES XCODITEM;
      INSERT INTO TEMPITENS (CODIGO, CODMOVIMENTO, CODPRODUTO,
         QUANTIDADE, VALOR_UNITARIO, DESCONTO,
         SITTRIBU, MARGEM, REAJUSTAR, VALOR_VENDA,
         ICMSCOMPRA, ICMSVENDA) VALUES (:XCODITEM,
         :CODMOVSAIDA, :XCODPRODUTO, :QUANTIDADE, :XPRECOCUSTO,
         0, '0.0', 0, 'N', :VALOR, 0, 0);
      EXECUTE PROCEDURE SEQ_OBTER 'INDIVIDUAIS'
         RETURNING_VALUES NSEQ;
      INSERT INTO INDIVIDUAIS (CODIGO, CODITEM, CODPRODUTO,
         CODMOVENTRADA, CODMOVSAIDA, SEQUENCIA, SERIE, VENDIDO, VALOR_VENDA,
         ICMSVENDA, DESCONTO, IMPETIQ, BARRA, QUANTIDADE, UNICO,
         FRACIONADO, PS) VALUES (:NSEQ, :XCODITEM, :XCODPRODUTO,
         :CODMOVSAIDA, :CODMOVSAIDA, '0000', '', 'S',
         :VALOR, 0, :DESCONTO, 'N',
         :BARRA, :QUANTIDADE, 0, 'N', 'S');
    END
END!



ALTER PROCEDURE REL_NOTAPRO (
    CODMOVIMENTO INTEGER)
RETURNS (
    CODIGO INTEGER,
    BARRA CHAR(13),
    DESCRICAO1 VARCHAR(40),
    DESCRICAO2 VARCHAR(60),
    SERIE VARCHAR(20),
    VALOR_VENDA NUMERIC(9,2),
    ICMS_VENDA NUMERIC(9,2),
    DESCONTO NUMERIC(9,2),
    QUANTIDADE NUMERIC(9,2),
    VALOR_UNIT NUMERIC(9,2),
    VALOR_TOTAL NUMERIC(9,2),
    VALOR_ICMS NUMERIC(9,2),
    SITTRIBU CHAR(3))
AS
BEGIN
   FOR
   SELECT
     ID.CODPRODUTO,
     ID.BARRA,
     PO.DESCRICAO,
     ID.SERIE,
     ID.VALOR_VENDA,
     ID.ICMSVENDA,
     ID.DESCONTO,
     ID.QUANTIDADE,
     ID.VALOR_PAGO,
     ID.VALOR_ICMS,
     TI.SITTRIBU
   FROM
     INDIVIDUAIS ID
     LEFT JOIN PRODUTOS PO ON
       ( PO.CODIGO = ID.CODPRODUTO )
     LEFT JOIN TEMPITENS TI ON
       ( TI.CODMOVIMENTO = ID.CODMOVENTRADA AND
         TI.CODPRODUTO   = ID.CODPRODUTO    AND
         TI.CODIGO       = ID.CODITEM )
   WHERE
     ID.CODMOVSAIDA = :CODMOVIMENTO AND
     ID.VENDIDO = 'S' AND
     ID.PS = 'P'
   INTO
     :CODIGO,
     :BARRA,
     :DESCRICAO1,
     :SERIE,
     :VALOR_VENDA,
     :ICMS_VENDA,
     :DESCONTO,
     :QUANTIDADE,
     :VALOR_TOTAL,
     :VALOR_ICMS,
     :SITTRIBU
   DO
   BEGIN
     if (SERIE = 'N/F') then SERIE = '';
     VALOR_UNIT = VALOR_VENDA - DESCONTO;
     DESCRICAO2 = F_LRTRIM(DESCRICAO1) || ' ' || SERIE;
     SUSPEND;
   END
END!


ALTER PROCEDURE REL_NOTASER (
    CODMOVIMENTO INTEGER)
RETURNS (
    CODIGO INTEGER,
    BARRA CHAR(13),
    DESCRICAO1 VARCHAR(40),
    DESCRICAO2 VARCHAR(60),
    SERIE VARCHAR(20),
    VALOR_VENDA NUMERIC(9,2),
    ICMS_VENDA NUMERIC(9,2),
    DESCONTO NUMERIC(9,2),
    QUANTIDADE NUMERIC(9,2),
    VALOR_UNIT NUMERIC(9, 2),
    VALOR_TOTAL NUMERIC(9,2),
    VALOR_ICMS NUMERIC(9,2),
    SITTRIBU CHAR(3))
AS
BEGIN
   FOR
   SELECT
     ID.CODPRODUTO,
     ID.BARRA,
     PO.DESCRICAO,
     ID.SERIE,
     ID.VALOR_VENDA,
     ID.ICMSVENDA,
     ID.DESCONTO,
     ID.QUANTIDADE,
     ID.VALOR_PAGO,
     ID.VALOR_ICMS,
     TI.SITTRIBU
   FROM
     INDIVIDUAIS ID
     LEFT JOIN PRODUTOS PO ON
       ( PO.CODIGO = ID.CODPRODUTO )
     LEFT JOIN TEMPITENS TI ON
       ( TI.CODMOVIMENTO = ID.CODMOVENTRADA AND
         TI.CODPRODUTO   = ID.CODPRODUTO    AND
         TI.CODIGO       = ID.CODITEM )
   WHERE
     ID.CODMOVSAIDA = :CODMOVIMENTO AND
     ID.VENDIDO = 'S' AND
     ID.PS = 'S'
   INTO
     :CODIGO,
     :BARRA,
     :DESCRICAO1,
     :SERIE,
     :VALOR_VENDA,
     :ICMS_VENDA,
     :DESCONTO,
     :QUANTIDADE,
     :VALOR_TOTAL,
     :VALOR_ICMS,
     :SITTRIBU
   DO
   BEGIN
     VALOR_UNIT = VALOR_VENDA - DESCONTO;
     DESCRICAO2 = F_LRTRIM(DESCRICAO1);
     SUSPEND;
   END
END!


ALTER PROCEDURE REL_NOTACORPO (
    CODMOVIMENTO INTEGER)
RETURNS (
    ES SMALLINT,
    CODCLIENTE INTEGER,
    CODFORNECEDOR INTEGER,
    DATA TIMESTAMP,
    SERVICOS VARCHAR(1024),
    VALOR_SERVICOS NUMERIC(9,2),
    VALOR_ITENS NUMERIC(9,2),
    DESCONTO NUMERIC(9,2),
    VALOR_PRODUTOS NUMERIC(9,2),
    VALOR_ICMS NUMERIC(9,2),
    VALOR_TOTAL NUMERIC(9,2),
    OBSERVACOES VARCHAR(2048),
    NOTA_NUMERO INTEGER,
    NOTA_DATAEMISSAO TIMESTAMP,
    NOTA_CODNATUOPER CHAR(5),
    NOTA_NATUOPER VARCHAR(30),
    NOTA_CODTRANSPORTADOR INTEGER,
    NOTA_PLACAVEICULO VARCHAR(10),
    NOTA_UFVEICULO VARCHAR(2),
    NOTA_FRETE SMALLINT,
    NOTA_VALOR_FRETE NUMERIC(9,2),
    NOTA_VALOR_SEGURO NUMERIC(9,2),
    NOTA_VALOR_OUTROS NUMERIC(9,2),
    NOTA_VALOR_TOTAL NUMERIC(9,2),
    NOTA_QUANTIDADE NUMERIC(9,2),
    NOTA_ESPECIE VARCHAR(30),
    NOTA_MARCA VARCHAR(20),
    NOTA_VOLNUM INTEGER,
    NOTA_PESOBRUTO NUMERIC(9,2),
    NOTA_PESOLIQUIDO NUMERIC(9,2),
    NOTA_DADOSADICIONAIS VARCHAR(1024),
    NOTA_DADOSADICSTR VARCHAR(254),
    CODVENDEDOR INTEGER,
    STATUS VARCHAR(20),
    CONDICAO VARCHAR(40),
    DATAINICIO TIMESTAMP,
    DATATERMINO TIMESTAMP,
    ICMSSIMPLES CHAR(1),
    ICMSSIMPALIQ NUMERIC(9,4),
    ISSALIQ NUMERIC(9,4),
    VALOR_ISS NUMERIC(9,2),
    NOTA_IESUBST VARCHAR(20),
    NOTA_DATASAIDA TIMESTAMP,
    NOTA_BASEICMS NUMERIC(9,4),
    NOTA_BASEICMSSUBST NUMERIC(9,4),
    NOTA_VALORICMSSUBST NUMERIC(9,2),
    VALOR_IPI NUMERIC(9,2),
    CODVENDEDOR_ABRE INTEGER,
    DESCONTOTXT VARCHAR(40),
    CLI_NOME VARCHAR(40),
    CLI_LOGRADOURO VARCHAR(40),
    CLI_NUMERO INTEGER,
    CLI_COMPLEMENTO VARCHAR(40),
    CLI_BAIRRO VARCHAR(60),
    CLI_CEP VARCHAR(10),
    CLI_CIDADE VARCHAR(60),
    CLI_ESTADO VARCHAR(2),
    CLI_FONE VARCHAR(20),
    CLI_FAX VARCHAR(20),
    CLI_EMAIL VARCHAR(50),
    CLI_RGIE VARCHAR(20),
    CLI_CPFCGC VARCHAR(20),
    TRA_NOME VARCHAR(40),
    TRA_LOGRADOURO VARCHAR(40),
    TRA_NUMERO INTEGER,
    TRA_COMPLEMENTO VARCHAR(40),
    TRA_BAIRRO VARCHAR(60),
    TRA_CEP VARCHAR(10),
    TRA_CIDADE VARCHAR(60),
    TRA_ESTADO VARCHAR(2),
    TRA_FONE VARCHAR(20),
    TRA_FAX VARCHAR(20),
    TRA_EMAIL VARCHAR(50),
    TRA_RGIE VARCHAR(20),
    TRA_CPFCGC VARCHAR(20))
AS
    DECLARE VARIABLE TEMP_PESSOAFISICA CHAR(1);
    DECLARE VARIABLE TEMP_RAZAOSOCIAL  VARCHAR(40);
    DECLARE VARIABLE TEMP_IE           VARCHAR(20);
    DECLARE VARIABLE TEMP_CGC          VARCHAR(20);
BEGIN
  SELECT
    ES,
    CODCLIENTE,
    CODFORNECEDOR,
    DATA,
    SERVICOS,
    VALOR_SERVICOS,
    VALOR_ITENS,
    DESCONTO,
    VALOR_PRODUTOS,
    VALOR_ICMS,
    VALOR_TOTAL,
    OBSERVACOES,
    NOTA_NUMERO,
    NOTA_DATAEMISSAO,
    NOTA_CODNATUOPER,
    NOTA_CODTRANSPORTADOR,
    NOTA_PLACAVEICULO,
    NOTA_UFVEICULO,
    NOTA_FRETE,
    NOTA_VALOR_FRETE,
    NOTA_VALOR_SEGURO,
    NOTA_VALOR_OUTROS,
    NOTA_VALOR_TOTAL,
    NOTA_QUANTIDADE,
    NOTA_ESPECIE,
    NOTA_MARCA,
    NOTA_VOLNUM,
    NOTA_PESOBRUTO,
    NOTA_PESOLIQUIDO,
    NOTA_DADOSADICIONAIS,
    CODVENDEDOR,
    STATUS,
    CONDICAO,
    DATAINICIO,
    DATATERMINO,
    ICMSSIMPLES,
    ICMSSIMPALIQ,
    ISSALIQ,
    VALOR_ISS,
    NOTA_IESUBST,
    NOTA_DATASAIDA,
    NOTA_BASEICMS,
    NOTA_BASEICMSSUBST,
    NOTA_VALORICMSSUBST,
    VALOR_IPI,
    CODVENDEDOR_ABRE,
    DESCONTOTXT
  FROM
    MOVIMENTOS MO
  WHERE
    CODIGO = :CODMOVIMENTO
  INTO
    :ES,
    :CODCLIENTE,
    :CODFORNECEDOR,
    :DATA,
    :SERVICOS,
    :VALOR_SERVICOS,
    :VALOR_ITENS,
    :DESCONTO,
    :VALOR_PRODUTOS,
    :VALOR_ICMS,
    :VALOR_TOTAL,
    :OBSERVACOES,
    :NOTA_NUMERO,
    :NOTA_DATAEMISSAO,
    :NOTA_CODNATUOPER,
    :NOTA_CODTRANSPORTADOR,
    :NOTA_PLACAVEICULO,
    :NOTA_UFVEICULO,
    :NOTA_FRETE,
    :NOTA_VALOR_FRETE,
    :NOTA_VALOR_SEGURO,
    :NOTA_VALOR_OUTROS,
    :NOTA_VALOR_TOTAL,
    :NOTA_QUANTIDADE,
    :NOTA_ESPECIE,
    :NOTA_MARCA,
    :NOTA_VOLNUM,
    :NOTA_PESOBRUTO,
    :NOTA_PESOLIQUIDO,
    :NOTA_DADOSADICIONAIS,
    :CODVENDEDOR,
    :STATUS,
    :CONDICAO,
    :DATAINICIO,
    :DATATERMINO,
    :ICMSSIMPLES,
    :ICMSSIMPALIQ,
    :ISSALIQ,
    :VALOR_ISS,
    :NOTA_IESUBST,
    :NOTA_DATASAIDA,
    :NOTA_BASEICMS,
    :NOTA_BASEICMSSUBST,
    :NOTA_VALORICMSSUBST,
    :VALOR_IPI,
    :CODVENDEDOR_ABRE,
    :DESCONTOTXT;
  SELECT
    CL.NOME,
    CL.RAZAOSOCIAL,
    CL.PESSOAFISICA,
    CL.NUMERO,
    CL.COMPLEMENTO,
    CL.ESTADO,
    CL.FONE,
    CL.FAX,
    CL.EMAIL,
    CL.RG,
    CL.CPF,
    CL.IE,
    CL.CGC,
    LO.LOGRADOURO,
    BA.BAIRRO,
    CI.CIDADE,
    LO.CEP
  FROM
    CLIENTES CL
    LEFT JOIN LOGRADOUROS LO ON
      ( LO.CODIGO = CL.LOCALIZACAO AND
        LO.BAIRRO = CL.BAIRRO AND
        LO.CIDADE = CL.CIDADE AND
        LO.ESTADO = CL.ESTADO )
    LEFT JOIN BAIRROS BA ON
      ( BA.CODIGO = CL.BAIRRO AND
        BA.CIDADE = CL.CIDADE AND
        BA.ESTADO = CL.ESTADO )
    LEFT JOIN CIDADES CI ON
      ( CI.CODIGO = CL.CIDADE AND
        CI.ESTADO = CL.ESTADO )
  WHERE
    CL.CODIGO = :CODCLIENTE
  INTO
    :CLI_NOME,
    :TEMP_RAZAOSOCIAL,
    :TEMP_PESSOAFISICA,
    :CLI_NUMERO,
    :CLI_COMPLEMENTO,
    :CLI_ESTADO,
    :CLI_FONE,
    :CLI_FAX,
    :CLI_EMAIL,
    :CLI_RGIE,
    :CLI_CPFCGC,
    :TEMP_IE,
    :TEMP_CGC,
    :CLI_LOGRADOURO,
    :CLI_BAIRRO,
    :CLI_CIDADE,
    :CLI_CEP;
  IF ( TEMP_PESSOAFISICA = 'J' ) THEN
   BEGIN
     CLI_NOME   = TEMP_RAZAOSOCIAL;
     CLI_RGIE   = TEMP_IE;
     CLI_CPFCGC = TEMP_CGC;
   END
  SELECT
    TR.NOME,
    TR.RAZAOSOCIAL,
    TR.PESSOAFISICA,
    TR.NUMERO,
    TR.COMPLEMENTO,
    TR.ESTADO,
    TR.FONE,
    TR.FAX,
    TR.EMAIL,
    TR.RG,
    TR.CPF,
    TR.IE,
    TR.CGC,
    LO.LOGRADOURO,
    BA.BAIRRO,
    CI.CIDADE,
    LO.CEP
  FROM
    TRANSPORTADORES TR
    LEFT JOIN LOGRADOUROS LO ON
      ( LO.CODIGO = TR.LOCALIZACAO AND
        LO.BAIRRO = TR.BAIRRO AND
        LO.CIDADE = TR.CIDADE AND
        LO.ESTADO = TR.ESTADO )
    LEFT JOIN BAIRROS BA ON
      ( BA.CODIGO = TR.BAIRRO AND
        BA.CIDADE = TR.CIDADE AND
        BA.ESTADO = TR.ESTADO )
    LEFT JOIN CIDADES CI ON
      ( CI.CODIGO = TR.CIDADE AND
        CI.ESTADO = TR.ESTADO )
  WHERE
    TR.CODIGO = :CODCLIENTE
  INTO
    :TRA_NOME,
    :TEMP_RAZAOSOCIAL,
    :TEMP_PESSOAFISICA,
    :TRA_NUMERO,
    :TRA_COMPLEMENTO,
    :TRA_ESTADO,
    :TRA_FONE,
    :TRA_FAX,
    :TRA_EMAIL,
    :TRA_RGIE,
    :TRA_CPFCGC,
    :TEMP_IE,
    :TEMP_CGC,
    :TRA_LOGRADOURO,
    :TRA_BAIRRO,
    :TRA_CIDADE,
    :TRA_CEP;
  IF ( TEMP_PESSOAFISICA = 'J' ) THEN
   BEGIN
     TRA_NOME   = TEMP_RAZAOSOCIAL;
     TRA_RGIE   = TEMP_IE;
     TRA_CPFCGC = TEMP_CGC;
   END
  SELECT
    NATUREZA
  FROM
    NATUOPER
  WHERE
    CODIGO = :NOTA_CODNATUOPER
  INTO
    :NOTA_NATUOPER;
  NOTA_DADOSADICSTR = F_MID(OBSERVACOES, 0, 252);
 SUSPEND;
END!


