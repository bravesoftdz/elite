/*
** ARMAZENAMENTO DE TRANSFERENCIA
*/

CREATE TABLE TRANSFERENCIAS (
  DATA DATA_VALIDA,
  CODBARRA BARRA_VALIDA,
  DESCRICAO STR60_VALIDO,
  QUANTIDADE INTEIRO_VALIDO,
  CODEMPRESA1 INTEIRO_VALIDO,
  CODEMPRESA2 INTEIRO_VALIDO,
  USUARIO STR30_VALIDO,
  CONSTRAINT TRANSFERENCIAS_PK
  PRIMARY KEY (DATA),
  CONSTRAINT TRANSFERENCIAS_FK01
  FOREIGN KEY (CODEMPRESA1)
  REFERENCES SISCONFIG(CODIGO)
  ON UPDATE CASCADE,
  CONSTRAINT TRANSFERENCIAS_FK02
  FOREIGN KEY (CODEMPRESA2)
  REFERENCES SISCONFIG(CODIGO)
  ON UPDATE CASCADE)!
  
GRANT ALL ON TRANSFERENCIAS TO PUBLIC!

ALTER PROCEDURE TRANSFERENCIA (
    BARRA CHAR(14),
    QUANTIDADE NUMERIC(9,2),
    CODEMPRESA1 INTEGER,
    CODEMPRESA2 INTEGER)
AS
DECLARE VARIABLE XCODIGO INTEGER;
DECLARE VARIABLE XCODITEM INTEGER;
DECLARE VARIABLE XCODPRODUTO INTEGER;
DECLARE VARIABLE XCODMOVENTRADA INTEGER;
DECLARE VARIABLE XSEQUENCIA CHAR(4);
DECLARE VARIABLE XSERIE CHAR(20);
DECLARE VARIABLE XVENDIDO CHAR(1);
DECLARE VARIABLE XCODMOVSAIDA INTEGER;
DECLARE VARIABLE XVALOR_VENDA NUMERIC(9,2);
DECLARE VARIABLE XICMSVENDA NUMERIC(9,2);
DECLARE VARIABLE XDESCONTO NUMERIC(9,2);
DECLARE VARIABLE XIMPETIQ CHAR(1);
DECLARE VARIABLE XBARRA CHAR(14);
DECLARE VARIABLE XQUANTIDADE NUMERIC(9,2);
DECLARE VARIABLE XUNICO INTEGER;
DECLARE VARIABLE BAIXA NUMERIC(9,2);
DECLARE VARIABLE SOBRA NUMERIC(9,2);
DECLARE VARIABLE NSEQ INTEGER;
DECLARE VARIABLE PS CHAR(1);
DECLARE VARIABLE XPRECOCUSTO NUMERIC(9,2);
DECLARE VARIABLE DESCRICAO VARCHAR(60);
BEGIN
  /* BUSCO O CÓDIGO DO PRODUTO E VEJO SE EH PRODUTO */
  SELECT
    CODIGO,
    DESCRICAO,
    PS
  FROM
    PRODUTOS
  WHERE
    BARRA = :BARRA
  INTO
    :XCODPRODUTO,
    :DESCRICAO,
    :PS;
  /* SE FOR PRODUTO MESMO */
  IF ((PS = 'P') OR (PS IS NULL)) THEN
   BEGIN
    /* QUAL É A QUANTIDADE DISPONÍVEL? */
    SELECT
      SUM(QUANTIDADE)
    FROM
      INDIVIDUAIS
    WHERE
      BARRA = :BARRA AND
      VENDIDO = 'N'  AND
      CODEMPRESA = :CODEMPRESA1
    INTO
      :XQUANTIDADE;
    /* SE A QUANTIDADE PERMITIR A TRANSFERENCIA */
    IF (QUANTIDADE <= XQUANTIDADE) THEN
      BEGIN

        /* GRAVO A TRANSFERENCIA */
        INSERT INTO
          TRANSFERENCIAS (
            DATA,
            CODBARRA,
            DESCRICAO,
            QUANTIDADE,
            CODEMPRESA1,
            CODEMPRESA2,
            USUARIO)
          VALUES (
            CURRENT_TIMESTAMP,
            :BARRA,
            :DESCRICAO,
            CAST(:QUANTIDADE AS INTEGER),
            :CODEMPRESA1,
            :CODEMPRESA2,
            USER);

        /* VERIFICO ITEM A ITEM O QUE DEVE SER TRANSFERIDO */
        FOR
        SELECT
          CODIGO,
          CODITEM,
          CODPRODUTO,
          CODMOVENTRADA,
          SEQUENCIA,
          SERIE,
          VENDIDO,
          CODMOVSAIDA,
          VALOR_VENDA,
          ICMSVENDA,
          DESCONTO,
          IMPETIQ,
          BARRA,
          QUANTIDADE,
          UNICO
        FROM
          INDIVIDUAIS
        WHERE
          BARRA = :BARRA AND
          VENDIDO = 'N' AND
          CODEMPRESA = :CODEMPRESA1
        ORDER BY
          CODIGO
        INTO
          :XCODIGO,
          :XCODITEM,
          :XCODPRODUTO,
          :XCODMOVENTRADA,
          :XSEQUENCIA,
          :XSERIE,
          :XVENDIDO,
          :XCODMOVSAIDA,
          :XVALOR_VENDA,
          :XICMSVENDA,
          :XDESCONTO,
          :XIMPETIQ,
          :XBARRA,
          :XQUANTIDADE,
          :XUNICO
        DO
        BEGIN
          /* TENHO O QUE TRANSFERIR? */
          IF (QUANTIDADE > 0) THEN
            BEGIN
              /* ZERO A SOBRA */
              SOBRA = 0;
              /* SE PRECISO MAIS DO QUE ESSE ITEM - LEVO ESSE INTEIRO */
              IF (QUANTIDADE >= XQUANTIDADE) THEN
                BEGIN
                  BAIXA = XQUANTIDADE;
                END ELSE
                BEGIN
                  /* SE NÃO, SOMENTE O SOLICITADO */
                  BAIXA = QUANTIDADE;
                  SOBRA = XQUANTIDADE - BAIXA;
                END
              /* DEFINO A QUANTIDADE */
              QUANTIDADE = QUANTIDADE - BAIXA;
              /* ATUALIZO A QUANTIDADE E FAÇO A TRANSFERENCIA */
              UPDATE
                INDIVIDUAIS
              SET
                QUANTIDADE = :BAIXA,
                CODEMPRESA = :CODEMPRESA2
              WHERE
                CODIGO = :XCODIGO;
              /* SE  EXISTE SOBRA, GRAVO O REGISTRO */
              IF (SOBRA > 0) THEN
                BEGIN
                  /* OBTENHO A SEQUENCIA */
                  EXECUTE PROCEDURE SEQ_OBTER 'INDIVIDUAIS'
                    RETURNING_VALUES NSEQ;
                  XVENDIDO = 'N';
                  INSERT INTO INDIVIDUAIS (CODIGO, CODITEM, CODPRODUTO,
                    CODMOVENTRADA, SEQUENCIA, SERIE, VENDIDO, VALOR_VENDA,
                    ICMSVENDA, DESCONTO, IMPETIQ, BARRA, QUANTIDADE, UNICO,
                    FRACIONADO, CODEMPRESA) VALUES (:NSEQ, :XCODITEM, :XCODPRODUTO,
                    :XCODMOVENTRADA, :XSEQUENCIA, :XSERIE, :XVENDIDO,
                    :XVALOR_VENDA, :XICMSVENDA, :XDESCONTO, :XIMPETIQ,
                    :XBARRA, :SOBRA, :XUNICO, 'S', :CODEMPRESA1);
              END
            END ELSE EXIT;
        END
      END ELSE EXCEPTION ITEM_ESGOTADO;
   END
END!

INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (77, CURRENT_TIMESTAMP)!
