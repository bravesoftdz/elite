/*************************************************************
  Este script corrige uma falha no tipo do campo MEDIDA_SER
 ************************************************************/

update RDB$RELATION_FIELDS set
RDB$FIELD_SOURCE = 'STR02'
where (RDB$FIELD_NAME = 'MEDIDA_SER') and
(RDB$RELATION_NAME = 'SISCONFIG')!

DROP TRIGGER MOVIMENTOS_AFTINS!

DROP TRIGGER MOVIMENTOS_AFTUPD!

DROP PROCEDURE GERAPARCELAS!

DROP PROCEDURE MOEDAEXTENSO!

DROP VIEW CONFIG_PADRAO!

CREATE VIEW CONFIG_PADRAO(
    CODIGO,
    CODCLIENTE,
    CODCONTA_COMPRACRE,
    CODCONTA_COMPRADEB,
    CODCONTA_VENDACRE,
    CODCONTA_VENDADEB,
    CODCLIENTE_PADRAO,
    VALOR_LIMITE,
    ALIQUOTA_ISS,
    ALIQUOTA_ICMSSIMPLES,
    ICMSSIMPLES,
    CODDOC_AVISTA,
    CODDOC_PRAZO,
    MDI,
    AUTOLAUNCH,
    AUTOLAUNCH_TIME,
    PADRAO,
    PRINT_OS,
    PRINT_NOTA,
    PRINT_BOLETO,
    MOEDASINGULAR,
    MOEDAPLURAL,
    CENTAVOSINGULAR,
    CENTAVOPLURAL,
    NOTA_PADRAO,
    OSABERTA_PADRAO,
    OSFECHADA_PADRAO,
    MEDIDA_SER,
    GRUPO_SER)
AS
SELECT
	SISCONFIG.CODIGO,
	SISCONFIG.CODCLIENTE,
	SISCONFIG.CODCONTA_COMPRACRE,
	SISCONFIG.CODCONTA_COMPRADEB,
	SISCONFIG.CODCONTA_VENDACRE,
	SISCONFIG.CODCONTA_VENDADEB,
	SISCONFIG.CODCLIENTE_PADRAO,
	SISCONFIG.VALOR_LIMITE,
	SISCONFIG.ALIQUOTA_ISS,
	SISCONFIG.ALIQUOTA_ICMSSIMPLES,
	SISCONFIG.ICMSSIMPLES,
	SISCONFIG.CODDOC_AVISTA,
	SISCONFIG.CODDOC_PRAZO,
	SISCONFIG.MDI,
	SISCONFIG.AUTOLAUNCH,
	SISCONFIG.AUTOLAUNCH_TIME,
	SISCONFIG.PADRAO,
	SISCONFIG.PRINT_OS,
	SISCONFIG.PRINT_NOTA,
  	SISCONFIG.PRINT_BOLETO,
        SISCONFIG.MOEDASINGULAR,
        SISCONFIG.MOEDAPLURAL,
        SISCONFIG.CENTAVOSINGULAR,
        SISCONFIG.CENTAVOPLURAL,
        SISCONFIG.NOTA_PADRAO,
        SISCONFIG.OSABERTA_PADRAO,  
        SISCONFIG.OSFECHADA_PADRAO,
        SISCONFIG.MEDIDA_SER,
        SISCONFIG.GRUPO_SER
FROM
	SISCONFIG
WHERE
	SISCONFIG.PADRAO = 'S'
!

GRANT SELECT ON CONFIG_PADRAO TO PUBLIC!

CREATE PROCEDURE GERAPARCELAS (
    CODIGO INTEGER)
AS
   DECLARE VARIABLE TOTAL      NUMERIC(9, 2);
   DECLARE VARIABLE PARCELA    NUMERIC(9, 2);
   DECLARE VARIABLE CONDICAO   VARCHAR(40);
   DECLARE VARIABLE QUANTIDADE INTEGER;
   DECLARE VARIABLE ES         INTEGER;
   DECLARE VARIABLE N          INTEGER;
   DECLARE VARIABLE CODPAG     INTEGER;
   DECLARE VARIABLE DATAMOV    DATE;
   DECLARE VARIABLE DIAS       INTEGER;
   DECLARE VARIABLE CODDOC     INTEGER;
   DECLARE VARIABLE CODPAGO    INTEGER;
   DECLARE VARIABLE DOCVISTA   INTEGER;
   DECLARE VARIABLE DOCPRAZO   INTEGER;
   DECLARE VARIABLE DESCRICAO  CHAR(40);
BEGIN
   SELECT
      CODDOC_AVISTA,
      CODDOC_PRAZO
   FROM
      CONFIG_PADRAO
   INTO
      :DOCVISTA,
      :DOCPRAZO;
   SELECT
      VALOR_TOTAL,
      CONDICAO,
      ES,
      DATA
   FROM
      MOVIMENTOS
   WHERE
      CODIGO = :CODIGO
   INTO
      :TOTAL,
      :CONDICAO,
      :ES,
      :DATAMOV;
   IF (TOTAL <= 0) THEN EXIT;
   SELECT
      COUNT(*)
   FROM
      PARCELAS(
        :CONDICAO
      )
   INTO
      :QUANTIDADE;
   IF (QUANTIDADE > 0) THEN
    BEGIN
     DELETE FROM
      PAGAMENTOS
     WHERE
      CODMOVIMENTO = :CODIGO;
     PARCELA = CAST((TOTAL / QUANTIDADE) AS INTEGER);
     N = 0;
     FOR
     SELECT DIAS FROM PARCELAS(:CONDICAO) INTO :DIAS DO
      BEGIN
       N = N + 1;
       IF (ES = 1) THEN
          DESCRICAO = 'PARCELA ' || N || '/' || QUANTIDADE || ' DA COMPRA ' || CODIGO;
       ELSE
          DESCRICAO = 'PARCELA ' || N || '/' || QUANTIDADE || ' DA VENDA ' || CODIGO;
       SELECT SEQUENCIA + 1 FROM SEQUENCIA WHERE TABELA = 'PAGAMENTOS' INTO :CODPAG;
       UPDATE SEQUENCIA SET SEQUENCIA = :CODPAG WHERE TABELA = 'PAGAMENTOS';
       if (DIAS = 0) then
        begin
          CODDOC = DOCVISTA;
          CODPAGO = 1;
        end else
        begin
          CODDOC = DOCPRAZO;
          CODPAGO = 0;
        end
       INSERT INTO PAGAMENTOS (CODIGO, CODMOVIMENTO, NUMERO, DESCRICAO, ES,
         VALOR, DATAVENCIMENTO, CODDOCUMENTO, PAGO) VALUES (:CODPAG, :CODIGO, :N,
         :DESCRICAO, :ES, :PARCELA, :DATAMOV + :DIAS, :CODDOC, :CODPAGO);
      END
     UPDATE PAGAMENTOS SET VALOR = VALOR + (:TOTAL - (:PARCELA * :QUANTIDADE))
       WHERE CODMOVIMENTO = :CODIGO AND NUMERO = 1;
    END ELSE EXCEPTION CONDICAO_ERRADA;
END!

GRANT EXECUTE ON PROCEDURE GERAPARCELAS TO PUBLIC!

CREATE TRIGGER MOVIMENTOS_AFTINS FOR MOVIMENTOS
ACTIVE AFTER INSERT POSITION 0
AS
BEGIN
  IF ((NEW.ES IN (1, 2)) AND (NEW.TIPO IN (1, 2, 5)))THEN
    IF (NEW.VALOR_TOTAL > 0) THEN
      EXECUTE PROCEDURE GERAPARCELAS(NEW.CODIGO);
END!

CREATE TRIGGER MOVIMENTOS_AFTUPD FOR MOVIMENTOS
ACTIVE AFTER UPDATE POSITION 0
AS
BEGIN
  IF ((NEW.ES IN (1, 2)) AND (NEW.TIPO IN (1, 2, 5)))THEN
   IF ((NEW.VALOR_TOTAL <> OLD.VALOR_TOTAL) OR
      (NEW.CONDICAO <> OLD.CONDICAO)) THEN
     EXECUTE PROCEDURE GERAPARCELAS(NEW.CODIGO);
  IF (NEW.ES = 9) THEN
     DELETE FROM PAGAMENTOS WHERE CODMOVIMENTO = NEW.CODIGO;
END!

CREATE PROCEDURE MOEDAEXTENSO (
    VALOR DOUBLE PRECISION)
RETURNS (
    EXTENSO VARCHAR(254))
AS
  DECLARE VARIABLE MOEDA           VARCHAR(40);
  DECLARE VARIABLE CENTAVO         VARCHAR(40);
  DECLARE VARIABLE MOEDASINGULAR   VARCHAR(40);
  DECLARE VARIABLE MOEDAPLURAL     VARCHAR(40);
  DECLARE VARIABLE CENTAVOSINGULAR VARCHAR(40);
  DECLARE VARIABLE CENTAVOPLURAL   VARCHAR(40);
  DECLARE VARIABLE VALTEMP         INTEGER;
  DECLARE VARIABLE CENTEMP         INTEGER;
  DECLARE VARIABLE TEMPCONST       VARCHAR(254);
BEGIN
  /* PEGO A MOEDA */
  SELECT
    MOEDASINGULAR,
    MOEDAPLURAL,
    CENTAVOSINGULAR,
    CENTAVOPLURAL
  FROM
    CONFIG_PADRAO
  INTO
    :MOEDASINGULAR,
    :MOEDAPLURAL,
    :CENTAVOSINGULAR,
    :CENTAVOPLURAL;
  MOEDA   = '';
  CENTAVO = '';
  /* VALOR INTEIRO */
 VALTEMP = F_TRUNCATE ( VALOR );
  IF ( VALTEMP > 0 ) THEN
   IF ( VALTEMP = 1 ) THEN
    MOEDA = MOEDASINGULAR;
   ELSE
    MOEDA = MOEDAPLURAL;
 /* BUSCO O EXTENSO */
 EXECUTE PROCEDURE
    VALOREXTENSO( :VALTEMP )
  RETURNING_VALUES
    :EXTENSO;
  EXTENSO = EXTENSO || ' ' || MOEDA;
  /* CENTAVOS */
  VALOR   = VALOR - VALTEMP;
  CENTEMP = CAST(( VALOR * 100 ) AS INTEGER);
  IF ( CENTEMP > 0 ) THEN
   BEGIN
    IF ( CENTEMP = 1 ) THEN
     CENTAVO = CENTAVOSINGULAR;
    ELSE
     CENTAVO = CENTAVOPLURAL;
    /* BUSCO O EXTENSO */
    EXECUTE PROCEDURE
      VALOREXTENSO( :CENTEMP )
    RETURNING_VALUES
      :TEMPCONST;
    IF ( VALTEMP > 0 ) THEN
     EXTENSO = EXTENSO || ' E ' || TEMPCONST || ' ' || CENTAVO;
    ELSE
      EXTENSO = TEMPCONST || ' ' || CENTAVO || ' DE ' || MOEDASINGULAR;
   END
  SUSPEND;
END!

GRANT EXECUTE ON PROCEDURE MOEDAEXTENSO TO PUBLIC!

/****************************************************************
  Este script corrige uma falha na mesclagem de campos do tipo
  data das geracoes 1 e 3 do Interbase 
 ****************************************************************/

ALTER PROCEDURE REL_NOTACORPO (
    CODMOVIMENTO INTEGER)
RETURNS (
    ES SMALLINT,
    CODCLIENTE INTEGER,
    CODFORNECEDOR INTEGER,
    DATA TIMESTAMP,
    SERVICOS VARCHAR(1024),
    VALOR_SERVICOS NUMERIC(9,2),
    VALOR_ITENS NUMERIC(9,2),
    DESCONTO NUMERIC(9,2),
    VALOR_PRODUTOS NUMERIC(9,2),
    VALOR_ICMS NUMERIC(9,2),
    VALOR_TOTAL NUMERIC(9,2),
    OBSERVACOES VARCHAR(2048),
    NOTA_NUMERO INTEGER,
    NOTA_DATAEMISSAO TIMESTAMP,
    NOTA_CODNATUOPER INTEGER,
    NOTA_CODTRANSPORTADOR INTEGER,
    NOTA_PLACAVEICULO VARCHAR(10),
    NOTA_UFVEICULO VARCHAR(2),
    NOTA_FRETE SMALLINT,
    NOTA_VALOR_FRETE NUMERIC(9,2),
    NOTA_VALOR_SEGURO NUMERIC(9,2),
    NOTA_VALOR_OUTROS NUMERIC(9,2),
    NOTA_VALOR_TOTAL NUMERIC(9,2),
    NOTA_QUANTIDADE NUMERIC(9,2),
    NOTA_ESPECIE VARCHAR(30),
    NOTA_MARCA VARCHAR(20),
    NOTA_VOLNUM INTEGER,
    NOTA_PESOBRUTO NUMERIC(9,2),
    NOTA_PESOLIQUIDO NUMERIC(9,2),
    NOTA_DADOSADICIONAIS VARCHAR(1024),
    CODVENDEDOR INTEGER,
    STATUS VARCHAR(20),
    CONDICAO VARCHAR(40),
    DATAINICIO TIMESTAMP,
    DATATERMINO TIMESTAMP,
    ICMSSIMPLES CHAR(1),
    ICMSSIMPALIQ NUMERIC(9,4),
    ISSALIQ NUMERIC(9,4),
    VALOR_ISS NUMERIC(9,2),
    NOTA_IESUBST VARCHAR(20),
    NOTA_DATASAIDA TIMESTAMP,
    NOTA_BASEICMS NUMERIC(9,4),
    NOTA_BASEICMSSUBST NUMERIC(9,4),
    NOTA_VALORICMSSUBST NUMERIC(9,2),
    VALOR_IPI NUMERIC(9,2),
    CODVENDEDOR_ABRE INTEGER,
    DESCONTOTXT VARCHAR(40),
    CLI_NOME VARCHAR(40),
    CLI_LOGRADOURO VARCHAR(40),
    CLI_NUMERO INTEGER,
    CLI_COMPLEMENTO VARCHAR(40),
    CLI_BAIRRO VARCHAR(60),
    CLI_CEP VARCHAR(10),
    CLI_CIDADE VARCHAR(60),
    CLI_ESTADO VARCHAR(2),
    CLI_FONE VARCHAR(20),
    CLI_FAX VARCHAR(20),
    CLI_EMAIL VARCHAR(50),
    CLI_RGIE VARCHAR(20),
    CLI_CPFCGC VARCHAR(20),
    TRA_NOME VARCHAR(40),
    TRA_LOGRADOURO VARCHAR(40),
    TRA_NUMERO INTEGER,
    TRA_COMPLEMENTO VARCHAR(40),
    TRA_BAIRRO VARCHAR(60),
    TRA_CEP VARCHAR(10),
    TRA_CIDADE VARCHAR(60),
    TRA_ESTADO VARCHAR(2),
    TRA_FONE VARCHAR(20),
    TRA_FAX VARCHAR(20),
    TRA_EMAIL VARCHAR(50),
    TRA_RGIE VARCHAR(20),
    TRA_CPFCGC VARCHAR(20))
AS
    DECLARE VARIABLE TEMP_PESSOAFISICA CHAR(1);
    DECLARE VARIABLE TEMP_RAZAOSOCIAL  VARCHAR(40);
    DECLARE VARIABLE TEMP_IE           VARCHAR(20);
    DECLARE VARIABLE TEMP_CGC          VARCHAR(20);
BEGIN
  SELECT
    ES,
    CODCLIENTE,
    CODFORNECEDOR,
    DATA,
    SERVICOS,
    VALOR_SERVICOS,
    VALOR_ITENS,
    DESCONTO,
    VALOR_PRODUTOS,
    VALOR_ICMS,
    VALOR_TOTAL,
    OBSERVACOES,
    NOTA_NUMERO,
    NOTA_DATAEMISSAO,
    NOTA_CODNATUOPER,
    NOTA_CODTRANSPORTADOR,
    NOTA_PLACAVEICULO,
    NOTA_UFVEICULO,
    NOTA_FRETE,
    NOTA_VALOR_FRETE,
    NOTA_VALOR_SEGURO,
    NOTA_VALOR_OUTROS,
    NOTA_VALOR_TOTAL,
    NOTA_QUANTIDADE,
    NOTA_ESPECIE,
    NOTA_MARCA,
    NOTA_VOLNUM,
    NOTA_PESOBRUTO,
    NOTA_PESOLIQUIDO,
    NOTA_DADOSADICIONAIS,
    CODVENDEDOR,
    STATUS,
    CONDICAO,
    DATAINICIO,
    DATATERMINO,
    ICMSSIMPLES,
    ICMSSIMPALIQ,
    ISSALIQ,
    VALOR_ISS,
    NOTA_IESUBST,
    NOTA_DATASAIDA,
    NOTA_BASEICMS,
    NOTA_BASEICMSSUBST,
    NOTA_VALORICMSSUBST,
    VALOR_IPI,
    CODVENDEDOR_ABRE,
    DESCONTOTXT
  FROM
    MOVIMENTOS MO
  WHERE
    CODIGO = :CODMOVIMENTO
  INTO
    :ES,
    :CODCLIENTE,
    :CODFORNECEDOR,
    :DATA,
    :SERVICOS,
    :VALOR_SERVICOS,
    :VALOR_ITENS,
    :DESCONTO,
    :VALOR_PRODUTOS,
    :VALOR_ICMS,
    :VALOR_TOTAL,
    :OBSERVACOES,
    :NOTA_NUMERO,
    :NOTA_DATAEMISSAO,
    :NOTA_CODNATUOPER,
    :NOTA_CODTRANSPORTADOR,
    :NOTA_PLACAVEICULO,
    :NOTA_UFVEICULO,
    :NOTA_FRETE,
    :NOTA_VALOR_FRETE,
    :NOTA_VALOR_SEGURO,
    :NOTA_VALOR_OUTROS,
    :NOTA_VALOR_TOTAL,
    :NOTA_QUANTIDADE,
    :NOTA_ESPECIE,
    :NOTA_MARCA,
    :NOTA_VOLNUM,
    :NOTA_PESOBRUTO,
    :NOTA_PESOLIQUIDO,
    :NOTA_DADOSADICIONAIS,
    :CODVENDEDOR,
    :STATUS,
    :CONDICAO,
    :DATAINICIO,
    :DATATERMINO,
    :ICMSSIMPLES,
    :ICMSSIMPALIQ,
    :ISSALIQ,
    :VALOR_ISS,
    :NOTA_IESUBST,
    :NOTA_DATASAIDA,
    :NOTA_BASEICMS,
    :NOTA_BASEICMSSUBST,
    :NOTA_VALORICMSSUBST,
    :VALOR_IPI,
    :CODVENDEDOR_ABRE,
    :DESCONTOTXT;
  SELECT
    CL.NOME,
    CL.RAZAOSOCIAL,
    CL.PESSOAFISICA,
    CL.NUMERO,
    CL.COMPLEMENTO,
    CL.ESTADO,
    CL.FONE,
    CL.FAX,
    CL.EMAIL,
    CL.RG,
    CL.CPF,
    CL.IE,
    CL.CGC,
    LO.LOGRADOURO,
    BA.BAIRRO,
    CI.CIDADE,
    LO.CEP
  FROM
    CLIENTES CL
    LEFT JOIN LOGRADOUROS LO ON
      ( LO.CODIGO = CL.LOCALIZACAO AND
        LO.BAIRRO = CL.BAIRRO AND
        LO.CIDADE = CL.CIDADE AND
        LO.ESTADO = CL.ESTADO )
    LEFT JOIN BAIRROS BA ON
      ( BA.CODIGO = CL.BAIRRO AND
        BA.CIDADE = CL.CIDADE AND
        BA.ESTADO = CL.ESTADO )
    LEFT JOIN CIDADES CI ON
      ( CI.CODIGO = CL.CIDADE AND
        CI.ESTADO = CL.ESTADO )
  WHERE
    CL.CODIGO = :CODCLIENTE
  INTO
    :CLI_NOME,
    :TEMP_RAZAOSOCIAL,
    :TEMP_PESSOAFISICA,
    :CLI_NUMERO,
    :CLI_COMPLEMENTO,
    :CLI_ESTADO,
    :CLI_FONE,
    :CLI_FAX,
    :CLI_EMAIL,
    :CLI_RGIE,
    :CLI_CPFCGC,
    :TEMP_IE,
    :TEMP_CGC,
    :CLI_LOGRADOURO,
    :CLI_BAIRRO,
    :CLI_CIDADE,
    :CLI_CEP;
  IF ( TEMP_PESSOAFISICA = 'J' ) THEN
   BEGIN
     CLI_NOME   = TEMP_RAZAOSOCIAL;
     CLI_RGIE   = TEMP_IE;
     CLI_CPFCGC = TEMP_CGC;
   END
  SELECT
    TR.NOME,
    TR.RAZAOSOCIAL,
    TR.PESSOAFISICA,
    TR.NUMERO,
    TR.COMPLEMENTO,
    TR.ESTADO,
    TR.FONE,
    TR.FAX,
    TR.EMAIL,
    TR.RG,
    TR.CPF,
    TR.IE,
    TR.CGC,
    LO.LOGRADOURO,
    BA.BAIRRO,
    CI.CIDADE,
    LO.CEP
  FROM
    TRANSPORTADORES TR
    LEFT JOIN LOGRADOUROS LO ON
      ( LO.CODIGO = TR.LOCALIZACAO AND
        LO.BAIRRO = TR.BAIRRO AND
        LO.CIDADE = TR.CIDADE AND
        LO.ESTADO = TR.ESTADO )
    LEFT JOIN BAIRROS BA ON
      ( BA.CODIGO = TR.BAIRRO AND
        BA.CIDADE = TR.CIDADE AND
        BA.ESTADO = TR.ESTADO )
    LEFT JOIN CIDADES CI ON
      ( CI.CODIGO = TR.CIDADE AND
        CI.ESTADO = TR.ESTADO )
  WHERE
    TR.CODIGO = :CODCLIENTE
  INTO
    :TRA_NOME,
    :TEMP_RAZAOSOCIAL,
    :TEMP_PESSOAFISICA,
    :TRA_NUMERO,
    :TRA_COMPLEMENTO,
    :TRA_ESTADO,
    :TRA_FONE,
    :TRA_FAX,
    :TRA_EMAIL,
    :TRA_RGIE,
    :TRA_CPFCGC,
    :TEMP_IE,
    :TEMP_CGC,
    :TRA_LOGRADOURO,
    :TRA_BAIRRO,
    :TRA_CIDADE,
    :TRA_CEP;
  IF ( TEMP_PESSOAFISICA = 'J' ) THEN
   BEGIN
     TRA_NOME   = TEMP_RAZAOSOCIAL;
     TRA_RGIE   = TEMP_IE;
     TRA_CPFCGC = TEMP_CGC;
   END
 SUSPEND;
END!

/****************************************************************
  Este script corrige duas chaves estrangeiras que apontavam 
  para IMPOS e agora apontam para IMPNOTA 
 ****************************************************************/

ALTER TABLE SISCONFIG DROP CONSTRAINT SISCONFIG_FK10!

ALTER TABLE SISCONFIG DROP CONSTRAINT SISCONFIG_FK11!

ALTER TABLE SISCONFIG ADD CONSTRAINT SISCONFIG_FK10
        FOREIGN KEY ( OSABERTA_PADRAO )
        REFERENCES IMPNOTA ( NUMIMPNOTA )
	ON UPDATE CASCADE!

ALTER TABLE SISCONFIG ADD CONSTRAINT SISCONFIG_FK11
        FOREIGN KEY ( OSFECHADA_PADRAO )
        REFERENCES IMPNOTA ( NUMIMPNOTA )
	ON UPDATE CASCADE!



