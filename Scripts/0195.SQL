/*
** ACERTO DE ESTOQUE
*/

SET TERM ^ ;

CREATE PROCEDURE ACERTA_ESTOQUE 
AS
DECLARE VARIABLE CODEMPRESA INTEGER;
DECLARE VARIABLE CODPRODUTO INTEGER;
DECLARE VARIABLE ESTOQUE_MOV NUMERIC(9,2);
DECLARE VARIABLE ESTOQUE_REAL NUMERIC(9,2);
DECLARE VARIABLE ACERTO NUMERIC(9,2);
begin

  /* TODOS AS EMPRESAS */
  FOR
  SELECT
    CODIGO
  FROM
    SISCONFIG
  INTO
    :CODEMPRESA
  DO
  BEGIN

    /* TODOS OS PRODUTOS */
    FOR
    SELECT
      CODIGO
    FROM
      PRODUTOS
    INTO
      :CODPRODUTO
    DO
    BEGIN

      /* SALDO ATUAL DO MOVESTOQUE */
      SELECT FIRST 1
        ESTOQUE
      FROM
        MOVESTOQUE
      WHERE
        CODPRODUTO = :CODPRODUTO AND
        CODEMPRESA = :CODEMPRESA
      ORDER BY
        DATA
      INTO
        :ESTOQUE_MOV;

      IF (ESTOQUE_MOV IS NULL) THEN
        ESTOQUE_MOV = 0;

      /* SALDO REAL EM ESTOQUE - INDIVIDUAIS */
      SELECT
        SUM(QUANTIDADE)
      FROM
        INDIVIDUAIS
      WHERE
        CODPRODUTO = :CODPRODUTO AND
        CODEMPRESA = :CODEMPRESA AND
        VENDIDO    = 'N'
      INTO
        :ESTOQUE_REAL;

      IF (ESTOQUE_REAL IS NULL) THEN
        ESTOQUE_REAL = 0;

      /* NECESSITA DE ACERTO */
      IF (ESTOQUE_REAL <> ESTOQUE_MOV) THEN
       BEGIN

         /* TIPO DE ACERTO */
         IF (ESTOQUE_MOV <= 0) THEN
          BEGIN
            ACERTO = UDF_ABS(ESTOQUE_MOV) + UDF_ABS(ESTOQUE_REAL);
          END ELSE
          BEGIN
            IF (ESTOQUE_REAL < ESTOQUE_MOV) THEN
              ACERTO = ESTOQUE_MOV - ESTOQUE_REAL;
            ELSE
              ACERTO = ESTOQUE_REAL - ESTOQUE_MOV;
          END

         /* ACERTO */
         INSERT INTO
           MOVESTOQUE(
             CODPRODUTO,
             DATA,
             CODEMPRESA,
             QUANTIDADE,
             STATUS,
             CODMOVIMENTO,
             ESTOQUE_ANTERIOR)
           VALUES (
             :CODPRODUTO,
             CURRENT_TIMESTAMP,
             :CODEMPRESA,
             :ACERTO,
             'ACERTO DE ESTOQUE',
             0,
             :ESTOQUE_MOV);

       END

    END

  END
end

^

SET TERM ; ^

GRANT EXECUTE ON PROCEDURE ACERTA_ESTOQUE TO PUBLIC;

COMMIT;

EXECUTE PROCEDURE ACERTA_ESTOQUE;

INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (195, CURRENT_TIMESTAMP);
COMMIT;