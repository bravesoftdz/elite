/*
** FALHAS NAO RESOLVIDAS DE MOVESTOQUE E OUTROS - CORRIGIR DEPOIS
*/

DROP TRIGGER INDIVIDUAIS_AI0!
DROP TRIGGER INDIVIDUAIS_BU1!
DROP TRIGGER INDIVIDUAIS_AD0!

ALTER TRIGGER PAGAMENTOS_BU0
ACTIVE BEFORE UPDATE POSITION 0
AS
  DECLARE VARIABLE ULTIMO     INTEGER;
  DECLARE VARIABLE SALDO      NUMERIC(9, 2);
  DECLARE VARIABLE SALDONOVO  NUMERIC(9, 2);
BEGIN

  /* CARREGO AS OPCOES DO DOCUMENTO */
  SELECT
    TIPO_PAG,
    TIPO_DOC
  FROM
    DOCUMENTOS
  WHERE
    CODIGO = NEW.CODDOCUMENTO
  INTO
    NEW.TIPO_PAG,
    NEW.TIPO_DOC;

  /* ESTA PAGO? */
  IF ((OLD.PAGO = 0) AND (NEW.PAGO = 1)) THEN
   BEGIN
    /* DESCUBRO O SALDO ANTERIOR */
    SELECT
      MAX(CODLANCTO)
    FROM
      PAGAMENTOS
    WHERE
      CODCONTA = NEW.CODCONTA AND
      CODEMPRESA = NEW.CODEMPRESA
    INTO
      :ULTIMO;
    IF (ULTIMO IS NOT NULL) THEN
     BEGIN
       SELECT
         SALDOATU
       FROM
         PAGAMENTOS
       WHERE
         CODLANCTO = :ULTIMO
       INTO
         :SALDO;
     END ELSE SALDO = 0;
    /* PEGO O NUMERO DESTE LANCAMENTO */
    SELECT
      SEQUENCIA
    FROM
      SEQ_OBTER('LANCTO')
    INTO
      :ULTIMO;
    /* GRAVO OS VALORES CORRETOS */
    NEW.SALDOANT = SALDO;
    IF (NEW.ES = 1) THEN
      SALDONOVO = SALDO - NEW.TOTAL_PAGO;
    IF (NEW.ES = 2) THEN
      SALDONOVO = SALDO + NEW.TOTAL_PAGO;
    NEW.SALDOATU = SALDONOVO;
    NEW.NOMEUSUARIO = USER;
    NEW.DATAPAGO = 'NOW';
    NEW.CODLANCTO = ULTIMO;
   END
END!

ALTER TRIGGER VERIFICAR_PAGO
ACTIVE BEFORE DELETE POSITION 0
AS
    DECLARE VARIABLE TIPO INTEGER;
BEGIN
  IF (OLD.PAGO > 0) THEN
   BEGIN
    /*  VERIFICO O TIPO DO MOVIMENTO */
    SELECT
        TIPO
    FROM
        MOVIMENTOS
    WHERE
        CODIGO = OLD.CODMOVIMENTO
    INTO
        :TIPO;
    /* SE FOR MOVIMENTO FECHADO NAO POSSO EXCLUIR */
    IF (TIPO IN (3, 6)) THEN
      EXCEPTION PARCELA_PAGA;
   END
END!

DELETE FROM AUDIT_OPERATION!
DELETE FROM AUDIT_LOGON!

DROP PROCEDURE SAVEOPERATION!
DROP PROCEDURE SAVELOGON!

DROP TABLE AUDIT_OPERATION!
DROP TABLE AUDIT_LOGON!

INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (107, CURRENT_TIMESTAMP)!