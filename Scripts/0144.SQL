/*
** TEMPO DE ATENDIMENTO NAS O.S. - NOS MOVIMENTOS
*/

ALTER TABLE MOVIMENTOS ADD TEMPO_CHEGADA    DOUBLEPRES;

ALTER TABLE MOVIMENTOS ADD TEMPO_CONCLUSAO  DOUBLEPRES;

ALTER TABLE MOVIMENTOS ADD TEMPO_LANCAMENTO DOUBLEPRES;

ALTER TABLE MOVIMENTOS ADD TEMPO_CICLO      DOUBLEPRES;

ALTER TABLE MOVIMENTOS ADD TEMPO_TECNICOS   DOUBLEPRES;

SET TERM ^ ;

ALTER TRIGGER STATUS_UPDATE
ACTIVE BEFORE UPDATE POSITION 0
AS
DECLARE VARIABLE PRIMEIRO TIMESTAMP;
DECLARE VARIABLE ULTIMO TIMESTAMP;
DECLARE VARIABLE TOTAL DOUBLE PRECISION;
BEGIN
   IF (NEW.TIPO = 0) THEN NEW.STATUS = 'ORÇAMENTO';
   IF (NEW.TIPO = 1) THEN NEW.STATUS = 'COMPRA';
   IF (NEW.TIPO = 2) THEN NEW.STATUS = 'OS ABERTA';
   IF (NEW.TIPO = 3) THEN NEW.STATUS = 'OS FECHADA';
   IF (NEW.TIPO = 4) THEN NEW.STATUS = 'PRE ASSITENCIA';
   IF (NEW.TIPO = 5) THEN NEW.STATUS = 'VENDA ABERTA';
   IF (NEW.TIPO = 6) THEN NEW.STATUS = 'VENDA FECHADA';
   IF (NEW.TIPO = 7) THEN NEW.STATUS = 'N/F';
   IF (NEW.TIPO = 8) THEN NEW.STATUS = 'N/F';
   IF (NEW.TIPO = 9) THEN NEW.STATUS = 'ESTORNO';

   /* FECHOU A VENDA */
   IF ((OLD.TIPO IN (2, 5)) AND (NEW.TIPO IN (3, 6))) THEN
    BEGIN

      /* USUÁRIO, DATA E HORA DO FECHAMENTO */
      NEW.DATAFECHAMENTO = 'NOW';
      NEW.USUARIOFECHAMENTO = USER;

      /* TOTAL DA COMISSAO */
      SELECT
        SUM(VALOR_COMISSAO)
      FROM
        INDIVIDUAIS
      WHERE
        CODMOVSAIDA = OLD.CODIGO AND
        VENDIDO = 'S'
      INTO
        NEW.VALOR_COMISSAO;

      IF (NEW.VALOR_COMISSAO IS NULL) THEN
        NEW.VALOR_COMISSAO = 0.0;

      /* calcular impostos */
      IF (NEW.NOTA_NUMERO IS NOT NULL) THEN
       BEGIN

         /* TOTAL ICMS */
         SELECT
           SUM(TOTAL_ICMS)
         FROM
           INDIVIDUAIS
         WHERE
           CODMOVSAIDA = NEW.CODIGO
         INTO
           NEW.VALOR_ICMS;

       END

      /* TEMPOS DE ATENDIMENTO, SE FOR OS */
      IF (NEW.TIPO = 3) THEN
       BEGIN

         SELECT
           MIN(DATAINI),
           MAX(DATAFIM),
           SUM(THORAS)
         FROM
           OS_VENDER
         WHERE
           CODMOVIMENTO = NEW.CODIGO
         INTO
           :PRIMEIRO,
           :ULTIMO,
           :TOTAL;

         NEW.TEMPO_CHEGADA    = CAST(
           UDF_MINUTESBETWEEN(NEW.DATA, PRIMEIRO)
           AS DOUBLE PRECISION) / 60;

         NEW.TEMPO_CONCLUSAO  = CAST(
           UDF_MINUTESBETWEEN(NEW.DATA, ULTIMO)
           AS DOUBLE PRECISION) / 60;

         NEW.TEMPO_LANCAMENTO = CAST(
           UDF_MINUTESBETWEEN(ULTIMO, NEW.DATAFECHAMENTO)
           AS DOUBLE PRECISION) / 60;

         NEW.TEMPO_TECNICOS = TOTAL;

         NEW.DATAINICIO  = PRIMEIRO;

         NEW.DATATERMINO = ULTIMO;

       END

      NEW.TEMPO_CICLO = CAST(
        UDF_MINUTESBETWEEN(NEW.DATA, NEW.DATAFECHAMENTO)
        AS DOUBLE PRECISION) / 60;

    END

   /* RATEIO DOS CUSTOS DE COMPRA */
   IF ((NEW.ES = 1) AND (NEW.TIPO = 1)) THEN
     EXECUTE PROCEDURE RATEIO_CUSTOS (
       NEW.CODIGO,
       NEW.VALOR_PRODUTOS,
       NEW.VALOR_RATEIO_CUSTO);

END

^

SET TERM ; ^



INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (144, CURRENT_TIMESTAMP);