alter trigger STATUS_UPDATE
INACTIVE Before Update position 0
AS
BEGIN
   IF (NEW.TIPO = 0) THEN NEW.STATUS = 'ORÇAMENTO';
   IF (NEW.TIPO = 1) THEN NEW.STATUS = 'COMPRA';
   IF (NEW.TIPO = 2) THEN NEW.STATUS = 'OS ABERTA';
   IF (NEW.TIPO = 3) THEN NEW.STATUS = 'OS FECHADA';
   IF (NEW.TIPO = 4) THEN NEW.STATUS = 'PRE ASSITENCIA';
   IF (NEW.TIPO = 5) THEN NEW.STATUS = 'VENDA ABERTA';
   IF (NEW.TIPO = 6) THEN NEW.STATUS = 'VENDA FECHADA';
   IF (NEW.TIPO = 7) THEN NEW.STATUS = 'N/F';
   IF (NEW.TIPO = 8) THEN NEW.STATUS = 'N/F';
   IF (NEW.TIPO = 9) THEN NEW.STATUS = 'CANCELADO';
   /* fechou a venda */
   IF ((OLD.TIPO IN (2, 5)) AND (NEW.TIPO IN (3, 6))) THEN
    BEGIN
     /* usuário, data e hora do fechamento */
     NEW.DATAFECHAMENTO = 'NOW';
     NEW.USUARIOFECHAMENTO = USER;
     /* total da comissao */
     SELECT
       SUM(VALOR_COMISSAO)
     FROM
       INDIVIDUAIS
     WHERE
       CODMOVSAIDA = OLD.CODIGO AND
       VENDIDO = 'S'
     INTO
       NEW.VALOR_COMISSAO;
    END
   IF (NEW.ICMSSIMPLES = 'S') THEN
      NEW.VALOR_ICMS = (NEW.VALOR_ITENS * (NEW.ICMSSIMPALIQ / 100));
   ELSE
   BEGIN
      SELECT
        SUM(VALOR_ICMS)
      FROM
        INDIVIDUAIS
      WHERE
        CODMOVSAIDA = NEW.CODIGO AND
        VENDIDO = 'S'
      INTO
        NEW.VALOR_ICMS;
      if (NEW.VALOR_ICMS IS NULL) THEN
        NEW.VALOR_ICMS = 0;
   END
END!

alter trigger MOVIMENTOS_AFTUPD
INACTIVE After Update position 0
AS
BEGIN
  IF (NEW.ES IN (1, 2)) THEN
   BEGIN
     IF (((NEW.VALOR_TOTAL <> OLD.VALOR_TOTAL) OR
        (NEW.CONDICAO <> OLD.CONDICAO)) AND
        (NEW.TIPO IN (1, 2, 5))) THEN
           EXECUTE PROCEDURE GERAPARCELAS(NEW.CODIGO);
     if (NEW.TIPO IN (3, 6)) then
           EXECUTE PROCEDURE AUTOBAIXA(NEW.CODIGO);
   END
  IF (NEW.TIPO = 9) THEN
     DELETE FROM PAGAMENTOS WHERE CODMOVIMENTO = NEW.CODIGO AND
       PAGO = 0;
END!

EXECUTE PROCEDURE CONFIGURA_MOVIMENTOS!

DROP PROCEDURE CONFIGURA_MOVIMENTOS!

alter trigger MOVIMENTOS_AFTUPD
ACTIVE After Update position 0
AS
BEGIN
  IF (NEW.ES IN (1, 2)) THEN
   BEGIN
     IF (((NEW.VALOR_TOTAL <> OLD.VALOR_TOTAL) OR
        (NEW.CONDICAO <> OLD.CONDICAO)) AND
        (NEW.TIPO IN (1, 2, 5))) THEN
           EXECUTE PROCEDURE GERAPARCELAS(NEW.CODIGO);
     if (NEW.TIPO IN (3, 6)) then
           EXECUTE PROCEDURE AUTOBAIXA(NEW.CODIGO);
   END
  IF (NEW.TIPO = 9) THEN
     DELETE FROM PAGAMENTOS WHERE CODMOVIMENTO = NEW.CODIGO AND
       PAGO = 0;
END!

alter trigger STATUS_UPDATE
ACTIVE Before Update position 0
AS
BEGIN
   IF (NEW.TIPO = 0) THEN NEW.STATUS = 'ORÇAMENTO';
   IF (NEW.TIPO = 1) THEN NEW.STATUS = 'COMPRA';
   IF (NEW.TIPO = 2) THEN NEW.STATUS = 'OS ABERTA';
   IF (NEW.TIPO = 3) THEN NEW.STATUS = 'OS FECHADA';
   IF (NEW.TIPO = 4) THEN NEW.STATUS = 'PRE ASSITENCIA';
   IF (NEW.TIPO = 5) THEN NEW.STATUS = 'VENDA ABERTA';
   IF (NEW.TIPO = 6) THEN NEW.STATUS = 'VENDA FECHADA';
   IF (NEW.TIPO = 7) THEN NEW.STATUS = 'N/F';
   IF (NEW.TIPO = 8) THEN NEW.STATUS = 'N/F';
   IF (NEW.TIPO = 9) THEN NEW.STATUS = 'CANCELADO';
   /* fechou a venda */
   IF ((OLD.TIPO IN (2, 5)) AND (NEW.TIPO IN (3, 6))) THEN
    BEGIN
     /* usuário, data e hora do fechamento */
     NEW.DATAFECHAMENTO = 'NOW';
     NEW.USUARIOFECHAMENTO = USER;
     /* total da comissao */
     SELECT
       SUM(VALOR_COMISSAO)
     FROM
       INDIVIDUAIS
     WHERE
       CODMOVSAIDA = OLD.CODIGO AND
       VENDIDO = 'S'
     INTO
       NEW.VALOR_COMISSAO;
    END
   IF (NEW.ICMSSIMPLES = 'S') THEN
      NEW.VALOR_ICMS = (NEW.VALOR_ITENS * (NEW.ICMSSIMPALIQ / 100));
   ELSE
   BEGIN
      SELECT
        SUM(VALOR_ICMS)
      FROM
        INDIVIDUAIS
      WHERE
        CODMOVSAIDA = NEW.CODIGO AND
        VENDIDO = 'S'
      INTO
        NEW.VALOR_ICMS;
      if (NEW.VALOR_ICMS IS NULL) THEN
        NEW.VALOR_ICMS = 0;
   END
END!

alter table MOVIMENTOS
add constraint MOVIMENTOS_FK02
foreign key (CODVENDEDOR)
references CLIENTES(CODIGO)
on update CASCADE!

alter table MOVIMENTOS
add constraint MOVIMENTOS_FK03
foreign key (CODVENDEDOR_ABRE)
references CLIENTES(CODIGO)
on update CASCADE!

alter table MOVIMENTOS
add constraint MOVIMENTOS_FK04
foreign key (NOTA_CODTRANSPORTADOR)
references CLIENTES(CODIGO)
on update CASCADE!

alter table MOVIMENTOS
add constraint MOVIMENTOS_FK08
foreign key (CODRESPONSAVEL)
references CLIENTES(CODIGO)
on update CASCADE!

drop index MOVIMENTOS_SI04!

INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (50, CURRENT_TIMESTAMP)!


