/*
** DATA E USUARIO DO FECHAMENTO
*/

ALTER TABLE MOVIMENTOS ADD DATAESTORNO DATA;

ALTER TABLE MOVIMENTOS ADD USUARIOESTORNO STR40;

SET TERM ^ ;

ALTER PROCEDURE ESTORNO (
    CODMOVIMENTO INTEGER)
AS
DECLARE VARIABLE ES INTEGER;
DECLARE VARIABLE NUMERO INTEGER;
DECLARE VARIABLE CODDOCUMENTO INTEGER;
DECLARE VARIABLE INFODOC VARCHAR(50);
DECLARE VARIABLE CODCONTA INTEGER;
DECLARE VARIABLE TOTAL_PAGO NUMERIC(9,2);
DECLARE VARIABLE DATAVENCIMENTO TIMESTAMP;
DECLARE VARIABLE DESCRICAO VARCHAR(40);
DECLARE VARIABLE NOME VARCHAR(40);
DECLARE VARIABLE CODIGO INTEGER;
DECLARE VARIABLE CODCENTRO INTEGER;
DECLARE VARIABLE CODCLIENTE INTEGER;
BEGIN

  /* MARCO COMO CANCELADO */
  UPDATE
    MOVIMENTOS
  SET
    TIPO = 9,
    USUARIOESTORNO = USER,
    DATAESTORNO = CURRENT_TIMESTAMP
  WHERE
    CODIGO = :CODMOVIMENTO;

  /* DEVOLVO OS PRODUTOS */
  UPDATE
    INDIVIDUAIS
  SET
    VENDIDO = 'N'
  WHERE
    CODMOVSAIDA = :CODMOVIMENTO;

  /* VERIFICO OS PAGAMENTOS E ESTORNO 1 A 1 */
  FOR
  SELECT
    ES,
    NUMERO,
    CODDOCUMENTO,
    INFODOC,
    CODCONTA,
    TOTAL_PAGO,
    DATAVENCIMENTO,
    CODCENTRO,
    CODCLIENTE
  FROM
    PAGAMENTOS
  WHERE
    CODMOVIMENTO = :CODMOVIMENTO AND
    PAGO = 1
  INTO
    :ES,
    :NUMERO,
    :CODDOCUMENTO,
    :INFODOC,
    :CODCONTA,
    :TOTAL_PAGO,
    :DATAVENCIMENTO,
    :CODCENTRO,
    :CODCLIENTE
  DO
  BEGIN

    /* PEGO O NOME DO CLIENTE */
    IF (ES = 1) THEN
     BEGIN

       SELECT
         FO.NOME
       FROM
         MOVIMENTOS MO
         JOIN CLIENTES FO ON
           (FO.CODIGO = MO.CODCLIENTE)
       WHERE
         MO.CODIGO = :CODMOVIMENTO
       INTO
         :NOME;

     END ELSE
     BEGIN

       SELECT
         CL.NOME
       FROM
         MOVIMENTOS MO
         JOIN CLIENTES CL ON
           (CL.CODIGO = MO.CODCLIENTE)
       WHERE
         MO.CODIGO = :CODMOVIMENTO
       INTO
         :NOME;

     END

    /* MONTO A DESCRICAO */
    IF (ES = 1) THEN
      DESCRICAO = 'ESTORNO PARC ' || NUMERO || ' DA COMPRA ' || CODMOVIMENTO || ' ' || UDF_LEFT(NOME, 8);
    ELSE
      DESCRICAO = 'ESTORNO PARC ' || NUMERO || ' DA VENDA ' || CODMOVIMENTO || ' ' || UDF_LEFT(NOME, 8);

    /* INVERTO A CONDICAO PAGAR/RECEBER */
    IF (ES = 1) THEN
      ES = 2;
    ELSE ES = 1;

    /* RETIRO AS HORAS */
    DATAVENCIMENTO = CAST(DATAVENCIMENTO AS DATE);

    /* PEGO O CODIGO DO LANCAMENTO */
    SELECT
      SEQUENCIA
    FROM
      SEQ_OBTER('PAGAMENTOS')
    INTO
      :CODIGO;

    /* GRAVO O ESTORNO DA PARCELA */
    INSERT INTO
      PAGAMENTOS (
        CODIGO,
        CODMOVIMENTO,
        NUMERO,
        DESCRICAO,
        ES,
        DATACADAST,
        VALOR,
        EXTERNO,
        PAGO,
        DESCONTO,
        MULTA_JUROS,
        DATAVENCIMENTO,
        SALDOANT,
        SALDOATU,
        CODCONTA,
        CODDOCUMENTO,
        INFODOC,
        CODCENTRO,
        CODCLIENTE)
      VALUES (
        :CODIGO,
        :CODMOVIMENTO,
        :NUMERO,
        :DESCRICAO,
        :ES,
        'NOW',
        :TOTAL_PAGO,
        'S',
        0,
        0,
        0,
        'NOW',
        0,
        0,
        :CODCONTA,
        :CODDOCUMENTO,
        :INFODOC,
        :CODCENTRO,
        :CODCLIENTE);
  END
END

^

SET TERM ; ^

INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (152, CURRENT_TIMESTAMP);

COMMIT;