/*
** NOVOS CAMPOS DE CREDITO - BLOQUEIO
*/

SET TERM !;

ALTER TABLE CLIENTES
ADD LIMITECREDITO DINHEIRO!

UPDATE CLIENTES SET LIMITECREDITO = 1000!

CREATE DOMAIN TIPOBLOQUEIO AS 
CHAR(1)
DEFAULT 'A' 
NOT NULL 
CHECK (VALUE IN ('A', 'B', 'L'))!

ALTER TABLE CLIENTES
ADD TIPO_BLOQUEIO TIPOBLOQUEIO!

UPDATE CLIENTES SET TIPO_BLOQUEIO = 'A'!

CREATE DOMAIN TIPOIMPEDIMENTO AS 
CHAR(1)
DEFAULT 'N' 
NOT NULL 
CHECK (VALUE IN ('N', 'C', 'E', 'P', 'O'))!

ALTER TABLE CLIENTES
ADD TIPO_IMPEDIMENTO TIPOIMPEDIMENTO!

UPDATE CLIENTES SET TIPO_IMPEDIMENTO = 'N'!

ALTER PROCEDURE HISTORICO (
    CODCLIENTE INTEGER,
    CODEMPRESA INTEGER)
RETURNS (
    NOME VARCHAR(40) CHARACTER SET NONE,
    MOVIMENTOS INTEGER,
    TOTAL_MOVIMENTOS NUMERIC(9,2),
    TOTAL_PAGO NUMERIC(9,2),
    TOTAL_ARECEBER NUMERIC(9,2),
    TOTAL_ATRASO NUMERIC(9,2),
    DATA_MAISATRASADO TIMESTAMP,
    DIAS_ATRASO INTEGER,
    BLOQUEIO CHAR(1) CHARACTER SET NONE)
AS
DECLARE VARIABLE DIAS_SISTEMA INTEGER;
DECLARE VARIABLE TIPO_BLOQUEIO CHAR(1);
DECLARE VARIABLE TIPO_IMPEDIMENTO CHAR(1);
BEGIN

  /* NOME */
  SELECT
    NOME,
    TIPO_BLOQUEIO,
    TIPO_IMPEDIMENTO
  FROM
    CLIENTES
  WHERE
    CODIGO = :CODCLIENTE
  INTO
    :NOME,
    :TIPO_BLOQUEIO,
    :TIPO_IMPEDIMENTO;

  /* MOVIMENTOS, TOTAL_MOVIMENTOS */
  SELECT
    COUNT(MO.CODIGO),
    SUM(PA.TOTAL_PAGO)
  FROM
    MOVIMENTOS MO
    LEFT JOIN PAGAMENTOS PA ON
      (MO.CODIGO = PA.CODMOVIMENTO)
  WHERE
    MO.CODCLIENTE = :CODCLIENTE AND
    MO.TIPO IN (3, 6)
  INTO
    :MOVIMENTOS,
    :TOTAL_MOVIMENTOS;

  /* TOTAL_PAGO */
  SELECT
    SUM(PA.TOTAL_PAGO)
  FROM
    MOVIMENTOS MO
    LEFT JOIN PAGAMENTOS PA ON
      (MO.CODIGO = PA.CODMOVIMENTO)
  WHERE
    MO.CODCLIENTE = :CODCLIENTE AND
    MO.TIPO IN (3, 6) AND
    PA.PAGO = 1
  INTO
    :TOTAL_PAGO;

  /* TOTAL_ARECEBER */
  SELECT
    SUM(PA.TOTAL_PAGO)
  FROM
    MOVIMENTOS MO
    LEFT JOIN PAGAMENTOS PA ON
      (MO.CODIGO = PA.CODMOVIMENTO)
  WHERE
    MO.CODCLIENTE = :CODCLIENTE AND
    MO.TIPO IN (3, 6) AND
    PA.PAGO = 0 AND
    PA.DATAVENCIMENTO >= CURRENT_TIMESTAMP
  INTO
    :TOTAL_ARECEBER;

  /* TOTAL_ATRASO, DATA_MAISATRASADO, DIAS_ATRASO */
  SELECT
    SUM(PA.TOTAL_PAGO),
    MIN(PA.DATAVENCIMENTO)
  FROM
    MOVIMENTOS MO
    LEFT JOIN PAGAMENTOS PA ON
      (MO.CODIGO = PA.CODMOVIMENTO)
  WHERE
    MO.CODCLIENTE = :CODCLIENTE AND
    MO.TIPO IN (3, 6) AND
    PA.PAGO = 0 AND
    PA.DATAVENCIMENTO < CURRENT_TIMESTAMP
  INTO
    :TOTAL_ATRASO,
    :DATA_MAISATRASADO;
  DIAS_ATRASO = CAST((CURRENT_TIMESTAMP - DATA_MAISATRASADO) AS INTEGER);

  /* BLOQUEIO */
  SELECT
    BLOQUEIO_DIAS
  FROM
    SISCONFIG
  WHERE
    CODIGO = :CODEMPRESA
  INTO
    :DIAS_SISTEMA;

  IF (DIAS_ATRASO >= DIAS_SISTEMA) THEN
     BLOQUEIO = 'S';
  ELSE
     BLOQUEIO = 'N';

  IF (TIPO_BLOQUEIO <> 'A') THEN
   BEGIN
    IF (TIPO_BLOQUEIO = 'B') THEN
      BLOQUEIO = 'S';
    ELSE
      BLOQUEIO = 'N';
   END ELSE
   BEGIN
    IF ((TIPO_IMPEDIMENTO <> 'N') AND (BLOQUEIO = 'N')) THEN
      BLOQUEIO = 'S';
   END

  SUSPEND;
END!

INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (108, CURRENT_TIMESTAMP)!