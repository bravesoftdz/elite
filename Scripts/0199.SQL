/*
** ATIVACAO
*/

SET TERM ^ ;

CREATE PROCEDURE ATIVACAO_LER (
    CODMOVIMENTO INTEGER)
RETURNS (
    CODATIVACAO INTEGER,
    CODAPARELHO INTEGER,
    APARELHO VARCHAR(60),
    SERIE VARCHAR(30),
    SERIE2 VARCHAR(30),
    NUMERO VARCHAR(20),
    CODOPERADORA INTEGER,
    CODPLANO INTEGER,
    VALOR1 NUMERIC(9,2),
    VALOR2 NUMERIC(9,2),
    REBATE CHAR(1))
AS
begin

  /* ATIVACAO */
  SELECT
    ID.CODIGO
  FROM
    INDIVIDUAIS ID
  WHERE
    ID.CODMOVSAIDA = :CODMOVIMENTO AND
    ID.PS = 'S'
  INTO
    :CODATIVACAO;

  /* APARELHO */
  SELECT
    ID.CODIGO,
    PO.DESCRICAO,
    PO.PRECOVENDA,
    ID.VALOR_PAGO,
    ID.SERIE,
    ID.SERIE2,
    ID.NUMERO_FONE,
    ID.CODOPERADORA,
    ID.CODPLANO
  FROM
    INDIVIDUAIS ID
    LEFT JOIN PRODUTOS PO ON
      (PO.CODIGO = ID.CODPRODUTO)
  WHERE
    ID.CODMOVSAIDA = :CODMOVIMENTO AND
    ID.PS = 'P' AND
    ID.UNICO = 1
  INTO
    :CODAPARELHO,
    :APARELHO,
    :VALOR1,
    :VALOR2,
    :SERIE,
    :SERIE2,
    :NUMERO,
    :CODOPERADORA,
    :CODPLANO;

  IF (VALOR1 <> VALOR2) THEN
    REBATE = 'S';
  ELSE
    REBATE = 'N';

  suspend;
end

^

SET TERM ; ^

GRANT EXECUTE ON PROCEDURE ATIVACAO_LER TO PUBLIC;

SET TERM ^ ;

CREATE PROCEDURE ATIVACAO_GRAVAR (
    CODATIVACAO INTEGER,
    CODAPARELHO INTEGER,
    APARELHO VARCHAR(60),
    SERIE VARCHAR(30),
    SERIE2 VARCHAR(30),
    NUMERO VARCHAR(20),
    CODOPERADORA INTEGER,
    CODPLANO INTEGER,
    VALOR1 NUMERIC(9,2),
    VALOR2 NUMERIC(9,2),
    REBATE CHAR(1))
AS
begin

   IF (CODATIVACAO IS NOT NULL) THEN
     UPDATE
       INDIVIDUAIS ID
     SET
       ID.CODINDIVIDUO = :CODAPARELHO,
       ID.APARELO      = :APARELHO,
       ID.SERIE        = :SERIE,
       ID.SERIE2       = :SERIE2,
       ID.NUMERO_FONE  = :NUMERO,
       ID.CODOPERADORA = :CODOPERADORA,
       ID.CODPLANO     = :CODPLANO,
       ID.REBATE       = :REBATE
     WHERE
       ID.CODIGO       = :CODATIVACAO;

   IF (CODAPARELHO IS NOT NULL) THEN
     UPDATE
       INDIVIDUAIS ID
     SET
       ID.CODINDIVIDUO = :CODAPARELHO,
       ID.APARELO      = :APARELHO,
       ID.SERIE        = :SERIE,
       ID.SERIE2       = :SERIE2,
       ID.NUMERO_FONE  = :NUMERO,
       ID.CODOPERADORA = :CODOPERADORA,
       ID.CODPLANO     = :CODPLANO,
       ID.REBATE       = :REBATE,
       ID.VALOR_VENDA  = :VALOR1,
       ID.DESCONTO     = (:VALOR1 - :VALOR2)
     WHERE
       ID.CODIGO       = :CODAPARELHO;

end

^

SET TERM ; ^

GRANT EXECUTE ON PROCEDURE ATIVACAO_GRAVAR TO PUBLIC;

SET TERM ^ ;

ALTER PROCEDURE ATIVACAO_GRAVAR (
    CODATIVACAO INTEGER,
    CODAPARELHO INTEGER,
    APARELHO VARCHAR(60),
    SERIE VARCHAR(30),
    SERIE2 VARCHAR(30),
    NUMERO VARCHAR(20),
    CODOPERADORA INTEGER,
    CODPLANO INTEGER,
    VALOR1 NUMERIC(9,2),
    VALOR2 NUMERIC(9,2),
    REBATE CHAR(1))
AS
begin

   IF (CODATIVACAO IS NOT NULL) THEN
     UPDATE
       INDIVIDUAIS ID
     SET
       ID.CODINDIVIDUO = :CODAPARELHO,
       ID.APARELO      = :APARELHO,
       ID.SERIE        = :SERIE,
       ID.SERIE2       = :SERIE2,
       ID.NUMERO_FONE  = :NUMERO,
       ID.CODOPERADORA = :CODOPERADORA,
       ID.CODPLANO     = :CODPLANO,
       ID.REBATE       = :REBATE,
       ID.ATIVACAO     = 'S'
     WHERE
       ID.CODIGO       = :CODATIVACAO;

   IF (CODAPARELHO IS NOT NULL) THEN
     UPDATE
       INDIVIDUAIS ID
     SET
       ID.APARELO      = :APARELHO,
       ID.SERIE        = :SERIE,
       ID.SERIE2       = :SERIE2,
       ID.NUMERO_FONE  = :NUMERO,
       ID.CODOPERADORA = :CODOPERADORA,
       ID.CODPLANO     = :CODPLANO,
       ID.REBATE       = :REBATE,
       ID.VALOR_VENDA  = :VALOR1,
       ID.DESCONTO     = (:VALOR1 - :VALOR2)
     WHERE
       ID.CODIGO       = :CODAPARELHO;

end

^

SET TERM ; ^

INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (199, CURRENT_TIMESTAMP);
COMMIT;