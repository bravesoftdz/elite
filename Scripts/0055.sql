
CREATE EXCEPTION ESTADO_INVALIDO 'O VALOR DO CAMPO ESTADO NAO EXISTE'!

CREATE EXCEPTION CIDADE_INVALIDA 'O VALOR DO CAMPO CIDADE NAO EXISTE'!

CREATE EXCEPTION PFPJ_INVALIDO 'PREENCHER SOMENTE PESSOA FISICA OU JURIDICA'!

CREATE EXCEPTION CEP_INVALIDO 'CEP INVALIDO. USE O FORMATO 99999-999'!

CREATE EXCEPTION FONE_INVALIDO 'FONE INVALIDO. USE O FORMATO (99)9999-9999'!

CREATE EXCEPTION FAX_INVALIDO 'FAX INVALIDO. USE O FORMATO (99)9999-9999'!

CREATE EXCEPTION CELULAR_INVALIDO 'CELULAR INVALIDO. USE O FORMATO (99)9999-9999'!

CREATE PROCEDURE WEBUPD_CLIENTES (
    NOME VARCHAR (40),
    RAZAOSOCIAL VARCHAR (40),
    CGC VARCHAR (20),
    IE VARCHAR (20),
    RG VARCHAR (20),
    CPF VARCHAR (20),
    PAI VARCHAR (40),
    MAE VARCHAR (40),
    LOGRADOURO VARCHAR (60),
    NUMERO INTEGER,
    COMPLEMENTO VARCHAR (40),
    BAIRRO VARCHAR (60),
    CIDADE VARCHAR (60),
    ESTADO CHAR (2),
    CEP VARCHAR (9),
    FONE VARCHAR (20),
    FAX VARCHAR (20),
    CELULAR VARCHAR (20),
    EMAIL VARCHAR (50),
    CODIGO INTEGER,
    OP INTEGER,
    CODEMPRESA INTEGER)
AS
  DECLARE VARIABLE COD_ESTADO VARCHAR(30);
  DECLARE VARIABLE COD_CIDADE INTEGER;
  DECLARE VARIABLE COD_BAIRRO INTEGER;
  DECLARE VARIABLE COD_LOGRADOURO INTEGER;
  DECLARE VARIABLE NOMEUSER VARCHAR(30);
BEGIN

  /* FACO A VALIDACAO DOS DADOS PF/PJ */
  IF (((CPF > '') OR (RG > '')) AND ((CGC > '') OR (IE > ''))) THEN
    EXCEPTION PFPJ_INVALIDO;

  IF (F_STRINGLENGTH(CEP) < 8) THEN
    EXCEPTION CEP_INVALIDO;

  IF (FONE > '') THEN
   IF (NOT ((F_MID(FONE, 0, 1) = '(') AND (F_MID(FONE, 3, 1) = ')') AND
      (F_MID(FONE, 8, 1) = '-'))) THEN
    EXCEPTION FONE_INVALIDO;

  IF (FAX > '') THEN
   IF (NOT ((F_MID(FAX, 0, 1) = '(') AND (F_MID(FAX, 3, 1) = ')') AND
      (F_MID(FAX, 8, 1) = '-'))) THEN
    EXCEPTION FAX_INVALIDO;

  IF (CELULAR > '') THEN
   IF (NOT ((F_MID(CELULAR, 0, 1) = '(') AND (F_MID(CELULAR, 3, 1) = ')') AND
      (F_MID(CELULAR, 8, 1) = '-'))) THEN
    EXCEPTION CELULAR_INVALIDO;

  /* DESCUBRO O CODIGO DO ESTADO */
  SELECT
    ESTADO
  FROM
    ESTADOS
  WHERE
    SIGLA = :ESTADO
  INTO
    :COD_ESTADO;

  /* SE O ESTADO NAO EXISTIR, GERO ERRO */
  IF (COD_ESTADO IS NULL) THEN
    EXCEPTION ESTADO_INVALIDO;

  /* DESCUBRO O CODIGO DA CIDADE */
  SELECT
    CODIGO
  FROM
    CIDADES
  WHERE
    CIDADE = :CIDADE AND
    ESTADO = :ESTADO
  INTO
    :COD_CIDADE;

  /* SE A CIDADE NAO EXISTIR, GERO ERRO */
  IF (COD_ESTADO IS NULL) THEN
    EXCEPTION CIDADE_INVALIDA;

  /* VERIFICO A EXISTENCIA DO BAIRRO */
  SELECT
    CODIGO
  FROM
    BAIRROS
  WHERE
    BAIRRO = :BAIRRO AND
    CIDADE = :COD_CIDADE AND
    ESTADO = :ESTADO
  INTO
    :COD_BAIRRO;

  /* SE O BAIRRO NAO EXISTIR, DEVO CADASTRA-LO */
  IF (COD_BAIRRO IS NULL) THEN
   BEGIN

     SELECT
       SEQUENCIA
     FROM
       SEQ_OBTER('BAIRROS')
     INTO
       :COD_BAIRRO;

     INSERT INTO
       BAIRROS (
         CODIGO,
         BAIRRO,
         CIDADE,
         ESTADO)
       VALUES (
         :COD_BAIRRO,
         :BAIRRO,
         :COD_CIDADE,
         :ESTADO);

   END

  /* VERIFICO A EXISTENCIA DO LOGRADOURO */
  SELECT
    CODIGO
  FROM
    LOGRADOUROS
  WHERE
    LOGRADOURO = :LOGRADOURO AND
    BAIRRO = :COD_BAIRRO AND
    CIDADE = :COD_CIDADE AND
    ESTADO = :ESTADO
  INTO
    :COD_LOGRADOURO;

  /* SE NAO EXISTIR, CADASTRO O LOGRADOURO */
  IF (COD_LOGRADOURO IS NULL) THEN
   BEGIN

     SELECT
       SEQUENCIA
     FROM
       SEQ_OBTER('LOGRADOUROS')
     INTO
       :COD_LOGRADOURO;

     INSERT INTO
       LOGRADOUROS (
        CODIGO,
        LOGRADOURO,
        BAIRRO,
        CEP,
        CIDADE,
        ESTADO,
        EXTENSO)
       VALUES (
        :COD_LOGRADOURO,
        :LOGRADOURO,
        :COD_BAIRRO,
        :CEP,
        :COD_CIDADE,
        :ESTADO,
        :LOGRADOURO);

   END

  /* VERIFICO A OPERACAO 1=ATUALIZAR, SENAO, CADASTRAR */
  IF (OP = 1) THEN
   BEGIN

     UPDATE
       CLIENTES
     SET
       NOME        = :NOME,
       RAZAOSOCIAL = :RAZAOSOCIAL,
       CGC         = :CGC,
       IE          = :IE,
       RG          = :RG,
       CPF         = :CPF,
       PAI         = :PAI,
       MAE         = :MAE,
       LOCALIZACAO = :COD_LOGRADOURO,
       NUMERO      = :NUMERO,
       COMPLEMENTO = :COMPLEMENTO,
       BAIRRO      = :COD_BAIRRO,
       CIDADE      = :COD_CIDADE,
       ESTADO      = :ESTADO,
       FONE        = :FONE,
       FAX         = :FAX,
       CELULAR     = :CELULAR,
       EMAIL       = :EMAIL
     WHERE
       CODIGO      = :CODIGO;

   END ELSE
   BEGIN

     NOMEUSER = 'CLI' || CODIGO;

     INSERT INTO
       CLIENTES (
         CODIGO,
	 NOME,
         RAZAOSOCIAL,
         CGC,
         IE,
         RG,
         CPF,
         PAI,
         MAE,
         LOCALIZACAO,
         NUMERO,
         COMPLEMENTO,
         BAIRRO,
         CIDADE,
         ESTADO,
         FONE,
         FAX,
         CELULAR,
         EMAIL,
	 SALARIO,
	 COMISSAO,
	 NOMEUSER,
	 TIPO,
	 CODEMPRESA)
       VALUES (
         :CODIGO,
         :NOME,
         :RAZAOSOCIAL,
         :CGC,
         :IE,
         :RG,
         :CPF,
         :PAI,
         :MAE,
         :COD_LOGRADOURO,
         :NUMERO,
         :COMPLEMENTO,
         :COD_BAIRRO,
         :COD_CIDADE,
         :ESTADO,
         :FONE,
         :FAX,
         :CELULAR,
         :EMAIL,
	 0,
	 0,
	 :NOMEUSER,
	 'C',
	 :CODEMPRESA);

   END

END!

GRANT EXECUTE ON PROCEDURE WEBUPD_CLIENTES TO PUBLIC!

INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (55, CURRENT_TIMESTAMP)!